array [1..256] of int: Edge_End = [21, 20, 15, 34, 28, 48, 56, 22, 26, 63, 13, 25, 62, 10, 23, 40, 24, 44, 54, 43, 58, 35, 29, 45, 16, 14, 6, 38, 47, 33, 18, 11, 60, 39, 52, 19, 27, 4, 9, 7, 53, 36, 1, 46, 42, 50, 49, 41, 37, 59, 17, 2, 31, 61, 55, 8, 5, 51, 12, 30, 32, 64, 57, 3, 2, 40, 20, 46, 33, 19, 26, 9, 25, 33, 26, 61, 55, 43, 44, 9, 23, 34, 31, 15, 21, 37, 14, 26, 42, 46, 35, 38, 19, 19, 22, 9, 37, 2, 60, 14, 41, 24, 41, 15, 17, 1, 1, 35, 59, 45, 8, 30, 62, 50, 49, 64, 10, 31, 37, 41, 8, 59, 12, 52, 49, 29, 36, 41, 9, 30, 1, 42, 24, 46, 13, 9, 17, 1, 61, 7, 38, 22, 60, 63, 1, 59, 18, 45, 35, 50, 24, 63, 44, 63, 61, 12, 20, 48, 42, 36, 58, 29, 46, 36, 6, 40, 54, 13, 38, 64, 32, 47, 64, 62, 9, 54, 41, 9, 39, 34, 63, 35, 37, 9, 8, 40, 58, 61, 41, 57, 52, 46, 12, 60, 20, 64, 47, 39, 4, 59, 30, 4, 24, 47, 55, 46, 53, 38, 26, 15, 44, 40, 63, 14, 1, 2, 25, 34, 10, 21, 10, 36, 58, 9, 49, 61, 8, 42, 12, 13, 56, 45, 50, 14, 29, 13, 48, 51, 61, 63, 8, 28, 33, 13, 51, 10, 38, 57, 59, 18, 4, 5, 12, 25, 10, 22];
array [1..256] of int: Edge_Start = [3, 21, 20, 15, 34, 28, 48, 56, 22, 26, 63, 13, 25, 62, 10, 23, 40, 24, 44, 54, 43, 58, 35, 29, 45, 16, 14, 6, 38, 47, 33, 18, 11, 60, 39, 52, 19, 27, 4, 9, 7, 53, 36, 1, 46, 42, 50, 49, 41, 37, 59, 17, 2, 31, 61, 55, 8, 5, 51, 12, 30, 32, 64, 57, 40, 31, 28, 61, 10, 53, 16, 19, 40, 2, 10, 51, 28, 61, 28, 48, 16, 23, 14, 39, 23, 56, 45, 8, 12, 45, 33, 49, 48, 44, 8, 25, 7, 7, 18, 23, 27, 37, 12, 17, 42, 43, 39, 19, 22, 34, 48, 28, 6, 21, 29, 24, 24, 18, 47, 4, 33, 5, 23, 28, 16, 59, 15, 20, 24, 64, 61, 14, 33, 4, 8, 63, 1, 45, 37, 44, 20, 53, 34, 20, 55, 10, 8, 58, 59, 55, 25, 48, 59, 52, 21, 52, 11, 47, 26, 6, 26, 24, 32, 14, 18, 23, 22, 46, 29, 25, 23, 54, 62, 55, 11, 50, 30, 14, 22, 23, 17, 22, 59, 48, 55, 43, 15, 30, 34, 55, 53, 32, 20, 35, 33, 34, 57, 7, 50, 29, 31, 9, 14, 34, 50, 53, 61, 39, 34, 57, 33, 63, 11, 16, 41, 32, 7, 8, 40, 57, 1, 54, 1, 12, 58, 19, 24, 9, 32, 62, 29, 19, 64, 38, 45, 55, 29, 10, 11, 39, 63, 22, 39, 35, 55, 31, 18, 12, 50, 20, 39, 42, 36, 12, 7, 54];
array [1..256] of int: L = [50, 16, 16, 15, 35, 32, 36, 64, 10, 25, 42, 61, 50, 18, 60, 8, 10, 56, 56, 22, 51, 41, 49, 10, 40, 55, 34, 32, 45, 24, 38, 4, 23, 20, 16, 46, 61, 48, 64, 51, 5, 15, 11, 12, 10, 56, 53, 52, 2, 19, 32, 12, 46, 3, 27, 17, 21, 47, 60, 7, 39, 26, 54, 53, 33, 45, 14, 10, 56, 24, 40, 59, 53, 36, 22, 30, 19, 18, 60, 12, 26, 11, 50, 54, 12, 54, 16, 64, 50, 23, 44, 9, 27, 15, 11, 12, 28, 54, 6, 50, 45, 5, 41, 17, 6, 43, 61, 12, 52, 11, 33, 44, 14, 39, 63, 34, 55, 5, 3, 61, 4, 39, 10, 48, 12, 40, 5, 31, 3, 49, 40, 28, 33, 45, 35, 37, 7, 5, 43, 54, 30, 16, 31, 0, 1, 14, 6, 5, 16, 25, 23, 25, 49, 24, 14, 45, 7, 62, 30, 5, 9, 11, 52, 7, 21, 61, 43, 37, 25, 64, 62, 9, 62, 64, 46, 24, 9, 42, 45, 28, 26, 20, 46, 7, 8, 49, 7, 60, 47, 5, 57, 49, 61, 39, 27, 3, 22, 32, 48, 22, 14, 12, 26, 57, 46, 58, 25, 22, 60, 35, 48, 3, 25, 9, 48, 7, 45, 18, 2, 14, 20, 42, 39, 48, 40, 39, 46, 48, 55, 54, 41, 9, 43, 29, 13, 28, 29, 46, 21, 52, 11, 18, 19, 3, 28, 16, 29, 58, 0, 41, 9, 34, 48, 33, 14, 43];
var 0..7976: INT____00001 :: is_defined_var :: var_is_introduced;
array [1..256] of var 0..1: x :: output_array([1..256]);
constraint int_lin_eq([1, -1], [x[1], x[64]], 0);
constraint int_lin_eq([-1, 1, 1], [x[37], x[38], x[101]], 0);
constraint int_lin_eq([-1, 1, 1, -1], [x[7], x[8], x[86], x[231]], 0);
constraint int_lin_eq([-1, 1, 1, -1], [x[57], x[58], x[122], x[252]], 0);
constraint int_lin_eq([-1, 1, -1, -1, -1], [x[33], x[34], x[99], x[143], x[194]], 0);
constraint int_lin_eq([-1, 1, -1, 1, 1], [x[20], x[21], x[78], x[106], x[186]], 0);
constraint int_lin_eq([-1, 1, 1, -1, -1], [x[58], x[59], x[76], x[238], x[245]], 0);
constraint int_lin_eq([-1, 1, 1, 1, -1], [x[27], x[28], x[113], x[160], x[165]], 0);
constraint int_lin_eq([-1, 1, -1, 1, -1, -1], [x[52], x[53], x[65], x[74], x[98], x[216]], 0);
constraint int_lin_eq([-1, 1, -1, 1, -1, 1], [x[13], x[14], x[113], x[173], x[174], x[230]], 0);
constraint int_lin_eq([-1, 1, -1, 1, 1, -1], [x[1], x[2], x[85], x[114], x[155], x[220]], 0);
constraint int_lin_eq([-1, 1, -1, 1, 1, -1], [x[35], x[36], x[124], x[154], x[156], x[191]], 0);
constraint int_lin_eq([-1, 1, 1, -1, -1, -1], [x[47], x[48], x[92], x[115], x[125], x[225]], 0);
constraint int_lin_eq([-1, 1, 1, -1, -1, 1], [x[51], x[52], x[104], x[105], x[137], x[181]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1], [x[25], x[26], x[71], x[81], x[125], x[214]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1], [x[32], x[33], x[157], x[175], x[213], x[239]], 0);
constraint int_lin_eq([-1, 1, -1, -1, -1, -1, -1], [x[11], x[12], x[135], x[168], x[230], x[236], x[244]], 0);
constraint int_lin_eq([-1, 1, -1, -1, -1, -1, 1], [x[42], x[43], x[127], x[160], x[164], x[222], x[253]], 0);
constraint int_lin_eq([-1, 1, -1, -1, 1, 1, -1], [x[3], x[4], x[84], x[104], x[127], x[187], x[210]], 0);
constraint int_lin_eq([-1, 1, -1, -1, 1, 1, -1], [x[60], x[61], x[112], x[130], x[177], x[188], x[201]], 0);
constraint int_lin_eq([-1, 1, -1, 1, -1, 1, 1], [x[19], x[20], x[167], x[172], x[176], x[222], x[256]], 0);
constraint int_lin_eq([-1, 1, -1, 1, 1, -1, -1], [x[18], x[19], x[79], x[94], x[140], x[153], x[211]], 0);
constraint int_lin_eq([-1, 1, -1, 1, 1, 1, -1], [x[63], x[64], x[190], x[197], x[210], x[220], x[248]], 0);
constraint int_lin_eq([-1, 1, 1, -1, -1, -1, 1], [x[21], x[22], x[148], x[161], x[187], x[223], x[225]], 0);
constraint int_lin_eq([-1, 1, 1, -1, -1, 1, 1], [x[53], x[54], x[66], x[83], x[118], x[201], x[246]], 0);
constraint int_lin_eq([-1, 1, 1, -1, 1, 1, 1], [x[61], x[62], x[163], x[171], x[192], x[216], x[229]], 0);
constraint int_lin_eq([-1, 1, 1, 1, -1, -1, -1], [x[29], x[30], x[119], x[158], x[172], x[197], x[204]], 0);
constraint int_lin_eq([-1, 1, 1, 1, -1, -1, -1], [x[38], x[39], x[120], x[134], x[199], x[202], x[251]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, -1], [x[41], x[42], x[70], x[142], x[191], x[206], x[207]], 0);
constraint int_lin_eq([-1, 1, -1, -1, -1, -1, 1, -1], [x[28], x[29], x[92], x[141], x[169], x[208], x[234], x[247]], 0);
constraint int_lin_eq([-1, 1, -1, -1, -1, -1, 1, 1], [x[22], x[23], x[91], x[108], x[149], x[182], x[194], x[244]], 0);
constraint int_lin_eq([-1, 1, -1, -1, -1, 1, 1, -1], [x[9], x[10], x[71], x[75], x[88], x[159], x[161], x[209]], 0);
constraint int_lin_eq([-1, 1, -1, -1, 1, -1, 1, -1], [x[49], x[50], x[86], x[97], x[102], x[119], x[139], x[183]], 0);
constraint int_lin_eq([-1, 1, -1, 1, -1, -1, -1, 1], [x[45], x[46], x[89], x[105], x[132], x[159], x[228], x[252]], 0);
constraint int_lin_eq([-1, 1, -1, 1, -1, -1, -1, 1], [x[62], x[63], x[116], x[130], x[170], x[173], x[196], x[233]], -1);
constraint int_lin_eq([-1, 1, -1, 1, 1, 1, -1, -1], [x[12], x[13], x[73], x[96], x[151], x[170], x[217], x[254]], 0);
constraint int_lin_eq([-1, 1, 1, 1, -1, 1, 1, -1], [x[31], x[32], x[99], x[118], x[147], x[165], x[247], x[250]], 0);
constraint int_lin_eq([-1, 1, 1, 1, -1, 1, 1, 1], [x[40], x[41], x[97], x[98], x[140], x[198], x[217], x[255]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, 1, -1], [x[5], x[6], x[67], x[77], x[79], x[112], x[124], x[242]], 0);
constraint int_lin_eq([-1, 1, -1, -1, -1, -1, -1, -1, 1], [x[48], x[49], x[101], x[103], x[120], x[128], x[177], x[189], x[215]], 0);
constraint int_lin_eq([-1, 1, -1, -1, -1, -1, 1, -1, -1], [x[44], x[45], x[68], x[90], x[134], x[163], x[168], x[192], x[206]], 0);
constraint int_lin_eq([-1, 1, -1, -1, 1, 1, 1, -1, 1], [x[46], x[47], x[114], x[150], x[176], x[199], x[205], x[233], x[249]], 0);
constraint int_lin_eq([-1, 1, -1, 1, -1, -1, 1, 1, 1], [x[36], x[37], x[70], x[72], x[93], x[94], x[108], x[226], x[232]], 0);
constraint int_lin_eq([-1, 1, 1, -1, 1, -1, -1, -1, 1], [x[16], x[17], x[65], x[66], x[73], x[166], x[186], x[212], x[219]], 0);
constraint int_lin_eq([-1, 1, 1, 1, -1, 1, -1, -1, 1], [x[24], x[25], x[87], x[90], x[110], x[138], x[148], x[232], x[235]], 0);
constraint int_lin_eq([-1, 1, 1, 1, 1, 1, -1, 1, -1], [x[6], x[7], x[80], x[93], x[111], x[152], x[158], x[184], x[237]], 0);
constraint int_lin_eq([-1, 1, -1, -1, 1, 1, 1, 1, 1, -1], [x[30], x[31], x[69], x[74], x[91], x[121], x[133], x[195], x[211], x[243]], 0);
constraint int_lin_eq([-1, 1, -1, 1, -1, 1, 1, 1, 1, -1], [x[8], x[9], x[95], x[109], x[142], x[167], x[179], x[182], x[242], x[256]], 0);
constraint int_lin_eq([-1, 1, -1, 1, 1, 1, -1, 1, -1, 1], [x[2], x[3], x[67], x[128], x[141], x[144], x[157], x[193], x[195], x[250]], 0);
constraint int_lin_eq([-1, 1, -1, 1, 1, 1, 1, 1, 1, 1], [x[15], x[16], x[81], x[82], x[85], x[100], x[123], x[166], x[171], x[180]], 0);
constraint int_lin_eq([-1, 1, 1, -1, -1, 1, 1, 1, -1, 1], [x[23], x[24], x[115], x[126], x[162], x[169], x[200], x[231], x[235], x[237]], 0);
constraint int_lin_eq([-1, 1, 1, 1, -1, -1, 1, 1, 1, 1], [x[34], x[35], x[84], x[107], x[179], x[198], x[208], x[240], x[243], x[251]], 0);
constraint int_lin_eq([-1, 1, -1, -1, -1, 1, -1, -1, -1, 1, 1], [x[43], x[44], x[106], x[107], x[131], x[137], x[138], x[145], x[215], x[221], x[223]], 1);
constraint int_lin_eq([-1, 1, -1, -1, 1, -1, 1, 1, 1, -1, -1], [x[50], x[51], x[109], x[122], x[126], x[146], x[149], x[153], x[183], x[200], x[249]], 0);
constraint int_lin_eq([-1, 1, -1, 1, 1, -1, 1, 1, 1, 1, -1], [x[4], x[5], x[82], x[110], x[143], x[180], x[189], x[196], x[204], x[209], x[218]], 0);
constraint int_lin_eq([-1, 1, -1, 1, 1, 1, -1, -1, 1, -1, 1], [x[17], x[18], x[102], x[116], x[117], x[129], x[133], x[151], x[162], x[203], x[227]], 0);
constraint int_lin_eq([-1, 1, -1, 1, 1, 1, 1, 1, -1, 1, 1], [x[55], x[56], x[77], x[145], x[150], x[174], x[185], x[190], x[205], x[236], x[245]], 0);
constraint int_lin_eq([-1, 1, 1, -1, -1, -1, -1, 1, -1, -1, 1], [x[10], x[11], x[136], x[144], x[152], x[154], x[181], x[212], x[213], x[240], x[241]], 0);
constraint int_lin_eq([-1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1], [x[26], x[27], x[83], x[87], x[100], x[132], x[164], x[178], x[203], x[214], x[234]], 0);
constraint int_lin_eq([-1, 1, 1, 1, -1, 1, -1, -1, 1, -1, -1], [x[14], x[15], x[69], x[75], x[117], x[146], x[219], x[221], x[238], x[246], x[255]], 0);
constraint int_lin_eq([-1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1], [x[54], x[55], x[68], x[76], x[78], x[131], x[139], x[155], x[188], x[207], x[226], x[239]], 0);
constraint int_lin_eq([-1, 1, 1, 1, -1, -1, -1, 1, -1, 1, -1, 1], [x[59], x[60], x[89], x[103], x[123], x[156], x[193], x[224], x[229], x[248], x[253], x[254]], 0);
constraint int_lin_eq([-1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, -1], [x[56], x[57], x[88], x[95], x[111], x[121], x[135], x[147], x[185], x[218], x[227], x[241]], 0);
constraint int_lin_eq([-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1], [x[39], x[40], x[72], x[80], x[96], x[129], x[136], x[175], x[178], x[184], x[202], x[224], x[228]], 0);
constraint int_lin_eq([-1, 50, 16, 16, 15, 35, 32, 36, 64, 10, 25, 42, 61, 50, 18, 60, 8, 10, 56, 56, 22, 51, 41, 49, 10, 40, 55, 34, 32, 45, 24, 38, 4, 23, 20, 16, 46, 61, 48, 64, 51, 5, 15, 11, 12, 10, 56, 53, 52, 2, 19, 32, 12, 46, 3, 27, 17, 21, 47, 60, 7, 39, 26, 54, 53, 33, 45, 14, 10, 56, 24, 40, 59, 53, 36, 22, 30, 19, 18, 60, 12, 26, 11, 50, 54, 12, 54, 16, 64, 50, 23, 44, 9, 27, 15, 11, 12, 28, 54, 6, 50, 45, 5, 41, 17, 6, 43, 61, 12, 52, 11, 33, 44, 14, 39, 63, 34, 55, 5, 3, 61, 4, 39, 10, 48, 12, 40, 5, 31, 3, 49, 40, 28, 33, 45, 35, 37, 7, 5, 43, 54, 30, 16, 31, 1, 14, 6, 5, 16, 25, 23, 25, 49, 24, 14, 45, 7, 62, 30, 5, 9, 11, 52, 7, 21, 61, 43, 37, 25, 64, 62, 9, 62, 64, 46, 24, 9, 42, 45, 28, 26, 20, 46, 7, 8, 49, 7, 60, 47, 5, 57, 49, 61, 39, 27, 3, 22, 32, 48, 22, 14, 12, 26, 57, 46, 58, 25, 22, 60, 35, 48, 3, 25, 9, 48, 7, 45, 18, 2, 14, 20, 42, 39, 48, 40, 39, 46, 48, 55, 54, 41, 9, 43, 29, 13, 28, 29, 46, 21, 52, 11, 18, 19, 3, 28, 16, 29, 58, 41, 9, 34, 48, 33, 14, 43], [INT____00001, x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9], x[10], x[11], x[12], x[13], x[14], x[15], x[16], x[17], x[18], x[19], x[20], x[21], x[22], x[23], x[24], x[25], x[26], x[27], x[28], x[29], x[30], x[31], x[32], x[33], x[34], x[35], x[36], x[37], x[38], x[39], x[40], x[41], x[42], x[43], x[44], x[45], x[46], x[47], x[48], x[49], x[50], x[51], x[52], x[53], x[54], x[55], x[56], x[57], x[58], x[59], x[60], x[61], x[62], x[63], x[64], x[65], x[66], x[67], x[68], x[69], x[70], x[71], x[72], x[73], x[74], x[75], x[76], x[77], x[78], x[79], x[80], x[81], x[82], x[83], x[84], x[85], x[86], x[87], x[88], x[89], x[90], x[91], x[92], x[93], x[94], x[95], x[96], x[97], x[98], x[99], x[100], x[101], x[102], x[103], x[104], x[105], x[106], x[107], x[108], x[109], x[110], x[111], x[112], x[113], x[114], x[115], x[116], x[117], x[118], x[119], x[120], x[121], x[122], x[123], x[124], x[125], x[126], x[127], x[128], x[129], x[130], x[131], x[132], x[133], x[134], x[135], x[136], x[137], x[138], x[139], x[140], x[141], x[142], x[143], x[145], x[146], x[147], x[148], x[149], x[150], x[151], x[152], x[153], x[154], x[155], x[156], x[157], x[158], x[159], x[160], x[161], x[162], x[163], x[164], x[165], x[166], x[167], x[168], x[169], x[170], x[171], x[172], x[173], x[174], x[175], x[176], x[177], x[178], x[179], x[180], x[181], x[182], x[183], x[184], x[185], x[186], x[187], x[188], x[189], x[190], x[191], x[192], x[193], x[194], x[195], x[196], x[197], x[198], x[199], x[200], x[201], x[202], x[203], x[204], x[205], x[206], x[207], x[208], x[209], x[210], x[211], x[212], x[213], x[214], x[215], x[216], x[217], x[218], x[219], x[220], x[221], x[222], x[223], x[224], x[225], x[226], x[227], x[228], x[229], x[230], x[231], x[232], x[233], x[234], x[235], x[236], x[237], x[238], x[239], x[240], x[241], x[242], x[243], x[244], x[245], x[246], x[247], x[248], x[250], x[251], x[252], x[253], x[254], x[255], x[256]], 0) :: defines_var(INT____00001);
solve minimize INT____00001;
