val lines = scala.io.Source.fromFile("perfresults.txt", "utf-8").getLines()
val res = lines.map{ l =>
  println(l)
  val words = l.split(" ")
  (words(0),words(1).toInt,words(2),words(3),words(4)) 
}.toArray
val groupedResults = res.groupBy(i => i._1)


def chart(title: String, input: Iterable[(String,Int,String,String,String)],divName: String) = {  
  
"""
      var data = google.visualization.arrayToDataTable([
      ['Date', 'Time'],
""" +
      input.map(i => "['"+i._4+"',"+i._2+"]").mkString(",") +
"""
        ]);
        var options = {
          title: '"""+title+"""',
          vAxis: { minValue: 0}
        };

        var chart = new google.visualization.LineChart(document.getElementById('"""+divName+"""'));
        chart.draw(data, options);
"""
}
      
val a =
 <html>
  <head>
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type="text/javascript">
      {"""google.load('visualization', '1', {packages:['corechart']});
      google.setOnLoadCallback(drawChart);
      function drawChart() {""" + 
          groupedResults.map{case(k,v) => chart(k,v.sortBy(_._3),k)}.mkString(" ") +
      "}"
      }
    </script>
  </head>
  <body>
    {
      //<div id="queens1.scala" style="width: 900px; height: 500px;"></div>
      //groupedResults.map{case(k,v) => """<div id='"""+k+"""' style='width: 900px; height: 500px;'></div>"""}.mkString("")
     groupedResults.map{case(k,v) => <div id={k} style="width: 900px; height: 500px;"></div>}
 
    }
  </body>
</html>

scala.xml.XML.saveFull("report.html", a, "UTF-8", true, null)