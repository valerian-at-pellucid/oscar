package oscar.examples.cp.BinPacking.Tester1

import oscar.examples.cp.BinPacking.DataStructures.BinPackingInstance
import oscar.examples.cp.BinPacking.Tester1.BinPackingTest

object BinPackingInstanceTester extends App {

  val  test = {
	  val bpi = new BinPackingInstance();
	  bpi.binCapacities = Array(106 to 126,87 to 105,93 to 112,78 to 100,99 to 117,72 to 94,95 to 118,89 to 110,79 to 96,73 to 93,0 to 1908)
	  bpi.itemsSizes = Array(7,11,11,14,14,11,7,13,11,6,23,5,11,7,16,8,14,14,7,12,10,9,7,6,11,7,5,8,9,10,14,12,11,6,17,7,11,8,9,11,8,13,13,10,12,15,7,7,5,7,10,11,6,11,8,11,11,11,11,9,8,10,9,9,15,10,10,8,8,8,15,11,12,17,7,7,11,11,14,7,10,10,16,9,8,9,11,15,7,13,13,6,11,14,10,14,7,10,7,11,12,9,5,16,14,15,10,13,9,12,13,11,14,5,17,10,14,7,12,15,15,7,10,12,7,14,5,10,14,6,8,8,11,14,19,10,13,5,9,9,8,11,12,8,8,8,5,13,13,10,5,10,12,8,9,6,9,11,8,13,9,15,7,19,8,9,15,15,9,12,14,14,8,12,9,16,16,14,9,12,10,6)
	  bpi.binForItems = Array(
	Array(2,10),
	Array(10),
	Array(10),
	Array(10),
	Array(3,10),
	Array(0,5,10),
	Array(2,10),
	Array(8,10),
	Array(10),
	Array(3,10),
	Array(1,2,4,8,10),
	Array(9,10),
	Array(10),
	Array(10),
	Array(6,10),
	Array(4,10),
	Array(8,10),
	Array(4,10),
	Array(3,10),
	Array(10),
	Array(4,10),
	Array(5,10),
	Array(10),
	Array(3,8,9,10),
	Array(8,10),
	Array(2,10),
	Array(10),
	Array(10),
	Array(1,10),
	Array(10),
	Array(10),
	Array(7,10),
	Array(10),
	Array(2,3,6,10),
	Array(10),
	Array(5,10),
	Array(0,3,10),
	Array(1,10),
	Array(10),
	Array(0,10),
	Array(5,10),
	Array(10),
	Array(9,10),
	Array(4,10),
	Array(4,5,10),
	Array(5,6,10),
	Array(10),
	Array(7,10),
	Array(6,10),
	Array(1,2,4,9,10),
	Array(10),
	Array(1,5,10),
	Array(6,10),
	Array(10),
	Array(5,10),
	Array(10),
	Array(0,4,6,9,10),
	Array(10),
	Array(10),
	Array(10),
	Array(2,3,5,10),
	Array(10),
	Array(10),
	Array(10),
	Array(2,10),
	Array(9,10),
	Array(3,10),
	Array(10),
	Array(4,10),
	Array(0,10),
	Array(10),
	Array(7,10),
	Array(2,10),
	Array(6,10),
	Array(5,10),
	Array(10),
	Array(0,7,10),
	Array(10),
	Array(2,3,5,10),
	Array(1,2,6,10),
	Array(10),
	Array(10),
	Array(10),
	Array(10),
	Array(9,10),
	Array(10),
	Array(10),
	Array(8,10),
	Array(10),
	Array(3,4,10),
	Array(6,10),
	Array(2,10),
	Array(10),
	Array(10),
	Array(10),
	Array(0,6,10),
	Array(10),
	Array(0,4,10),
	Array(4,10),
	Array(10),
	Array(10),
	Array(10),
	Array(10),
	Array(9,10),
	Array(0,10),
	Array(0,6,10),
	Array(10),
	Array(9,10),
	Array(4,10),
	Array(10),
	Array(1,10),
	Array(3,8,10),
	Array(1,7,10),
	Array(4,7,10),
	Array(4,7,10),
	Array(10),
	Array(10),
	Array(10),
	Array(10),
	Array(10),
	Array(9,10),
	Array(10),
	Array(10),
	Array(7,10),
	Array(7,10),
	Array(2,10),
	Array(10),
	Array(1,10),
	Array(0,3,10),
	Array(4,10),
	Array(2,10),
	Array(10),
	Array(10),
	Array(1,10),
	Array(0,10),
	Array(4,10),
	Array(10),
	Array(1,10),
	Array(10),
	Array(1,10),
	Array(10),
	Array(1,10),
	Array(0,10),
	Array(8,10),
	Array(2,3,10),
	Array(10),
	Array(10),
	Array(4,6,10),
	Array(10),
	Array(10),
	Array(10),
	Array(10),
	Array(10),
	Array(2,10),
	Array(2,5,10),
	Array(10),
	Array(4,10),
	Array(5,10),
	Array(10),
	Array(10),
	Array(10),
	Array(9,10),
	Array(10),
	Array(8,10),
	Array(10),
	Array(4,10),
	Array(2,4,6,10),
	Array(0,3,7,10),
	Array(10),
	Array(10),
	Array(1,10),
	Array(8,10),
	Array(2,10),
	Array(10),
	Array(10),
	Array(7,10),
	Array(4,10),
	Array(6,7,10),
	Array(10),
	Array(5,10),
	Array(2,9,10),
	Array(3,10)
	 )
	  
	  bpi
  }
  
  println((new BinPackingTest(test)).testNormalExtendedAndClassic)
}