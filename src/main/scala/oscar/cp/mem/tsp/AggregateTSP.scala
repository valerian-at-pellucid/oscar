package oscar.cp.mem.tsp

import oscar.cp.mem.tsp.TSPParser.parseCoordinates
import oscar.cp.mem.RoutingUtils._
import oscar.cp.modeling._
import oscar.cp.core._
import oscar.util._
import oscar.cp.constraints._
import oscar.cp.mem.visu.VisualRelax
import scala.collection.mutable.Queue
import scala.util.Random.nextInt
import scala.util.Random.nextFloat
import scala.math.round
import oscar.search.IDSSearchController
import oscar.cp.mem.pareto.ParetoMinSet
import java.io._
import oscar.cp.mem.ChannelingPredSucc

object AggregateTSP {

  case class MOSol(pred: Array[Int], succ: Array[Int], dist1: Int, dist2: Int)
  case class Sol(pred: Array[Int], succ: Array[Int], dist: Int)

  val nObjs = 2
  val Objs = 0 until nObjs
  val pareto = ParetoMinSet[MOSol]()
  
  val used = Array.fill(100)(Array.fill(100)(false))

  def main(args: Array[String]) {

    /*for (alpha <- 0 to 100) {
      print("alpha: " + alpha + " -> ")
      val p = solve(alpha, "data/TSP/kroA100.tsp", "data/TSP/kroB100.tsp")
      pareto insert ((p.dist1, p.dist2), p)
      println(p.dist1 + " " + p.dist2)
    }*/

    insertScull()
    getUsedEdges(pareto.points.map(_.sol.pred))
    
    solveMO("data/TSP/kroA100.tsp", "data/TSP/kroB100.tsp")
    println(pareto.points.map(p => p.obj1 + " " + p.obj2).mkString("\n"))
  }
  
  def getUsedEdges(points: Array[Array[Int]]) { 
    for (p <- points; i <- 0 until p.size) {
      used(i)(p(i)) = true
      used(p(i))(i) = true
    } 
  }

  def solve(alpha: Int, instance1: String, instance2: String): MOSol = {

    // Data parsing
    // ------------
    val coord1 = parseCoordinates(instance1)
    val coord2 = parseCoordinates(instance2)

    val nCities = coord1.size
    val Cities = 0 until nCities

    // Computes the distance between two cities
    def getDist(p1: (Int, Int), p2: (Int, Int)): Double = {
      val dx = p2._1 - p1._1
      val dy = p2._2 - p1._2
      math.sqrt(dx * dx + dy * dy)
    }

    // Builds the distance matrix
    val realDistMatrix1 = Array.tabulate(nCities, nCities)((i, j) => getDist(coord1(i), coord1(j)))
    val realDistMatrix2 = Array.tabulate(nCities, nCities)((i, j) => getDist(coord2(i), coord2(j)))

    val distMatrix1 = realDistMatrix1.map(_.map(math.round(_).toInt))
    val distMatrix2 = realDistMatrix2.map(_.map(math.round(_).toInt))

    val dist = Array.tabulate(nCities)(i => {
      Array.tabulate(nCities)(j => {
        (alpha * distMatrix1(i)(j) + (100 - alpha) * distMatrix2(i)(j)) / 100
      })
    })

    // Model
    // -----
    val cp = new CPSolver()

    // Successors
    val succ = Array.fill(nCities)(CPVarInt(cp, Cities))
    // Predecessors
    val pred = Array.fill(nCities)(CPVarInt(cp, Cities))
    // Total distance
    val totDist = CPVarInt(cp, 0 to dist.flatten.sum)

    // Visualization
    // -------------
    //val visu: VisualRelax = new VisualRelax(coord1, dist.map(_.map(_.toDouble)))

    // LNS
    // ---
    var currentSol: Sol = null

    var nRestart = 1
    var nStagnation = 0
    var stagnation = false

    val pMin = 15
    val pMax = 60
    var p = pMin

    cp.silent = true
    cp.lns(400, 3000) {

      nRestart += 1

      handleStagnation()

      relaxVariables(pathRelax(p))
    }

    def handleStagnation() {

      if (stagnation) nStagnation += 1
      else {
        stagnation = true
        nStagnation = 0
        p = pMin + (p - pMin) / 2
      }

      if (nStagnation == 20) {
        nStagnation = 0
        if (p < pMax) p += 1
      }
    }

    def pathRelax(p: Int): Array[Boolean] = {

      val c = nextInt(nCities)
      val selected = Array.fill(nCities)(false)
      selected(c) = true

      for (i <- 1 until p) {

        val sel = Cities.filter(i => selected(i))
        val rem = Cities.filter(i => !selected(i))

        val c = sel(nextInt(sel.size))
        val cc = rem.sortBy(i => dist(c)(i)).head

        selected(cc) = true
      }
      selected
    }

    def solFound() = {
      stagnation = false
      currentSol = new Sol(pred.map(_.value), succ.map(_.value), totDist.value)
      //visu.updateRoute(currentSol.pred)
      //visu.updateDist()
    }

    def relaxVariables(selected: Array[Boolean]) {

      //visu.updateSelected(selected)
      //visu.updateRestart(nRestart)

      val constraints: Queue[Constraint] = Queue()

      for (c <- Cities; if !selected(c)) {
        if (!selected(currentSol.pred(c)))
          constraints enqueue (pred(c) == currentSol.pred(c))
        if (!selected(currentSol.succ(c)))
          constraints enqueue (succ(c) == currentSol.succ(c))
      }
      cp.post(constraints.toArray)
    }

    // Constraints
    // -----------
    cp.minimize(totDist) subjectTo {

      // Channeling between predecessors and successors
      cp.add(new ChannelingPredSucc(cp, pred, succ))

      // Consistency of the circuit with Strong filtering
      cp.add(circuit(succ), Strong)
      cp.add(circuit(pred), Strong)

      // Total distance
      cp.add(sum(Cities)(i => dist(i)(succ(i))) == totDist)
      cp.add(sum(Cities)(i => dist(i)(pred(i))) == totDist)

      cp.add(new TONOTCOMMIT(cp, pred, dist, totDist))
      cp.add(new TONOTCOMMIT(cp, succ, dist, totDist))
    }

    // Search
    // ------
    cp.exploration {
      regretHeuristic(cp, pred, dist)
      solFound()
    }

    var dist1 = 0
    for (i <- Cities) dist1 += distMatrix1(i)(currentSol.pred(i))

    var dist2 = 0
    for (i <- Cities) dist2 += distMatrix2(i)(currentSol.pred(i))

    return new MOSol(currentSol.pred, currentSol.succ, dist1, dist2)
  }

  def solveMO(instance1: String, instance2: String) = {

    // Data parsing
    // ------------
    val coord1 = parseCoordinates(instance1)
    val coord2 = parseCoordinates(instance2)

    val nCities = coord1.size
    val Cities = 0 until nCities

    // Computes the distance between two cities
    def getDist(p1: (Int, Int), p2: (Int, Int)): Double = {
      val dx = p2._1 - p1._1
      val dy = p2._2 - p1._2
      math.sqrt(dx * dx + dy * dy)
    }

    // Builds the distance matrix
    val realDistMatrix1 = Array.tabulate(nCities, nCities)((i, j) => getDist(coord1(i), coord1(j)))
    val realDistMatrix2 = Array.tabulate(nCities, nCities)((i, j) => getDist(coord2(i), coord2(j)))

    val distMatrix1 = realDistMatrix1.map(_.map(math.round(_).toInt))
    val distMatrix2 = realDistMatrix2.map(_.map(math.round(_).toInt))

    // Model
    // -----
    val cp = new CPSolver()

    // Successors & Predecessors
    //val succ = Array.fill(nCities)(CPVarInt(cp, Cities))
    //val pred = Array.fill(nCities)(CPVarInt(cp, Cities))
    
    val succ = Array.tabulate(nCities)(i => CPVarInt(cp, Cities.filter(j => used(i)(j))))
    val pred = Array.tabulate(nCities)(i => CPVarInt(cp, Cities.filter(j => used(i)(j))))
    
    // Total distance
    val totDist1 = CPVarInt(cp, 0 to distMatrix1.flatten.sum)
    val totDist2 = CPVarInt(cp, 0 to distMatrix2.flatten.sum)

    // Visualization
    // -------------
    //val visu1: VisualRelax = new VisualRelax(coord1, realDistMatrix1)
    //val visu2: VisualRelax = new VisualRelax(coord2, realDistMatrix2)

    // MOLNS
    // -----
    var newSol: MOSol = null

    var nRestart = 1
    var nObjRestart = 0
    var nStagnation = 0

    val pMin = 15
    val pMax = 30
    var p = pMin

    var firstLns = true
    cp.silent = true
    cp.lns(2000000, 2000) {

      // First LNS
      if (firstLns) {
        println("Start LNS");
        firstLns = false
      }

      nRestart += 1

      // Adds new solutions    
      if (newSol != null) {
        if (pareto insert ((newSol.dist1, newSol.dist2), newSol)) nObjRestart = 0
        newSol = null
        nStagnation = 0
        p = pMin + (p - pMin) / 2
        println("PARETO SIZE " + pareto.size)
      } else {
        nStagnation += 1
        if (nStagnation != 0 && nStagnation % 20 == 0) p += 1
        if (nStagnation == 2500) {
          cp.stop
        }
      }

      diversif()

      //visu1.updateRoute(pareto.currentSol.pred)
      //visu1.updateDist()
      //visu2.updateRoute(pareto.currentSol.pred)
      //visu2.updateDist()

      relaxVariables(pathRelax(p))
    }

    def nextObj(): Int = {

      nObjRestart += 1

      val obj = (cp.objective.currentObjectiveIdx + 1) % nObjs

      if (nObjRestart > nObjs) {
        pareto.nextSol(0)
        nObjRestart = 1
      }

      cp.objective.currentObjective = obj
      obj
    }

    def objRelax(obj: Int, intensification: Boolean) {
      for (o <- Objs) {
        if (intensification || o == obj) cp.objective.bounds(o) = pareto.currentVal(o) - 1
        else cp.objective.bounds(o) = pareto.currentUB(o) - 1
      }
    }

    def improveObj(obj: Int) {
      pareto.bestSol(obj)
      nObjRestart = 0
      cp.objective.currentObjective = obj
      objRelax(obj, false)
    }

    def diversif() {
      pareto.bestDivSurf
      val obj = nextObj()
      objRelax(obj, false)
    }

    def clusterRelax(p: Int): Array[Boolean] = {
      if (cp.objective.currentObjectiveIdx == 0) clusterRelax1(p)
      else clusterRelax2(p)
    }

    def clusterRelax1(p: Int): Array[Boolean] = {

      val c = nextInt(nCities)
      val sortedByDist = Cities.sortBy(i => distMatrix1(c)(i))
      val dist = distMatrix1(c)(sortedByDist(p))

      Array.tabulate(nCities)(i => distMatrix1(c)(i) <= dist)
    }

    def pathRelax(p: Int): Array[Boolean] = {

      val c = nextInt(nCities)
      val selected = Array.fill(nCities)(false)
      selected(c) = true

      for (i <- 1 until p) {

        val sel = Cities.filter(i => selected(i))
        val rem = Cities.filter(i => !selected(i))

        val c = sel(nextInt(sel.size))
        val cc = if (cp.objective.currentObjectiveIdx == 0) rem.sortBy(i => distMatrix1(c)(i)).head
        else rem.sortBy(i => distMatrix2(c)(i)).head

        selected(cc) = true
      }
      selected
    }

    def clusterRelax2(p: Int): Array[Boolean] = {

      val c = nextInt(nCities)
      val sortedByDist = Cities.sortBy(i => distMatrix2(c)(i))
      val dist = distMatrix2(c)(sortedByDist(p))

      Array.tabulate(nCities)(i => distMatrix2(c)(i) <= dist)
    }

    def solFound() {

      newSol = new MOSol(pred.map(_.value), succ.map(_.value), totDist1.value, totDist2.value)

      //visu1.updateRoute(newSol.pred)
      //visu1.updateDist()

      //visu2.updateRoute(newSol.pred)
      //visu2.updateDist()

    }

    def relaxVariables(selected: Array[Boolean]) {

      //visu1.updateSelected(selected)
      //visu1.updateRestart(nRestart)

      //visu2.updateSelected(selected)
      //visu2.updateRestart(nRestart)

      val constraints: Queue[Constraint] = Queue()

      for (c <- Cities) {
        if (!selected(c)) {

          if (!selected(pareto.currentSol.pred(c)))
            constraints enqueue (pred(c) == pareto.currentSol.pred(c))

          if (!selected(pareto.currentSol.succ(c)))
            constraints enqueue (succ(c) == pareto.currentSol.succ(c))
        }
      }

      cp.post(constraints.toArray)
    }

    // Constraints
    // -----------
    cp.minimize(totDist1, totDist2) subjectTo {

      // Channeling between predecessors and successors
      cp.add(new ChannelingPredSucc(cp, pred, succ))

      // Consistency of the circuit with Strong filtering
      cp.add(circuit(succ), Strong)
      cp.add(circuit(pred), Strong)

      // Total distance 1
      cp.add(sum(Cities)(i => distMatrix1(i)(succ(i))) == totDist1)
      cp.add(sum(Cities)(i => distMatrix1(i)(pred(i))) == totDist1)

      cp.add(new TONOTCOMMIT(cp, pred, distMatrix1, totDist1))
      cp.add(new TONOTCOMMIT(cp, succ, distMatrix1, totDist1))

      // Total distance 2
      cp.add(sum(Cities)(i => distMatrix2(i)(succ(i))) == totDist2)
      cp.add(sum(Cities)(i => distMatrix2(i)(pred(i))) == totDist2)

      cp.add(new TONOTCOMMIT(cp, pred, distMatrix2, totDist2))
      cp.add(new TONOTCOMMIT(cp, succ, distMatrix2, totDist2))
    }

    // Search
    // ------
    println("Searching...")
    cp.exploration {

      // Greedy heuristic
      if (cp.objective.currentObjectiveIdx == 0) regretHeuristic(cp, succ, distMatrix1)
      else regretHeuristic(cp, succ, distMatrix2)

      solFound()
    }
  }
  
  def insertScull() {
    insertScull1()
    insertScull2()
    insertScull3()
    insertScull4()
  }

  def insertScull1() {
    val s0 = new MOSol(Array(62, 53, 13, 64, 36, 48, 54, 41, 6, 71, 31, 19, 94, 70, 10, 87, 14, 23, 74, 56, 73, 93, 76, 37, 86, 65, 11, 92, 45, 38, 79, 44, 75, 28, 85, 83, 32, 98, 95, 63, 99, 88, 2, 1, 90, 42, 0, 29, 89, 43, 60, 4, 78, 39, 82, 96, 8, 66, 16, 61, 57, 34, 5, 68, 25, 69, 27, 72, 80, 21, 40, 20, 49, 58, 91, 12, 59, 51, 17, 55, 24, 84, 33, 9, 67, 26, 50, 52, 30, 18, 97, 7, 46, 15, 81, 77, 3, 22, 35, 47), Array(46, 43, 42, 96, 51, 62, 8, 91, 56, 83, 14, 26, 75, 2, 16, 93, 58, 78, 89, 11, 71, 69, 97, 17, 80, 64, 85, 66, 33, 47, 88, 10, 36, 82, 61, 98, 4, 23, 29, 53, 70, 7, 45, 49, 31, 28, 92, 99, 5, 72, 86, 77, 87, 1, 6, 79, 19, 60, 73, 76, 50, 59, 0, 39, 3, 25, 57, 84, 63, 65, 13, 9, 67, 20, 18, 32, 22, 95, 52, 30, 68, 94, 54, 35, 81, 34, 24, 15, 41, 48, 44, 74, 27, 21, 12, 38, 55, 90, 37, 40), 21282, 178446)
    pareto insert ((s0.dist1, s0.dist2), s0)
    val s1 = new MOSol(Array(92, 43, 42, 18, 95, 48, 8, 91, 56, 83, 14, 26, 32, 2, 16, 93, 58, 78, 74, 11, 71, 69, 97, 17, 80, 64, 85, 66, 33, 38, 88, 10, 36, 82, 61, 98, 4, 23, 81, 53, 13, 7, 45, 49, 31, 28, 62, 99, 89, 72, 86, 47, 87, 1, 6, 79, 19, 60, 73, 76, 50, 59, 5, 39, 3, 25, 57, 84, 63, 65, 40, 46, 67, 20, 96, 12, 22, 51, 52, 30, 68, 94, 54, 35, 29, 34, 24, 15, 41, 9, 44, 0, 27, 21, 75, 77, 55, 90, 37, 70), Array(91, 53, 13, 64, 36, 62, 54, 41, 6, 89, 31, 19, 75, 40, 10, 87, 14, 23, 3, 56, 73, 93, 76, 37, 86, 65, 11, 92, 45, 84, 79, 44, 12, 28, 85, 83, 32, 98, 29, 63, 70, 88, 2, 1, 90, 42, 71, 51, 5, 43, 60, 77, 78, 39, 82, 96, 8, 66, 16, 61, 57, 34, 46, 68, 25, 69, 27, 72, 80, 21, 99, 20, 49, 58, 18, 94, 59, 95, 17, 55, 24, 38, 33, 9, 67, 26, 50, 52, 30, 48, 97, 7, 0, 15, 81, 4, 74, 22, 35, 47), 21380, 165022)
    pareto insert ((s1.dist1, s1.dist2), s1)
    val s2 = new MOSol(Array(92, 43, 42, 18, 95, 48, 8, 91, 56, 83, 31, 26, 32, 2, 10, 93, 14, 78, 74, 11, 73, 69, 97, 17, 80, 64, 85, 66, 33, 38, 88, 46, 36, 82, 61, 98, 4, 23, 81, 53, 13, 7, 45, 49, 16, 28, 62, 99, 89, 72, 86, 47, 87, 1, 6, 79, 19, 60, 35, 76, 50, 59, 5, 39, 3, 25, 57, 84, 63, 65, 40, 20, 67, 58, 96, 12, 22, 51, 52, 30, 68, 94, 54, 71, 29, 34, 24, 15, 41, 9, 44, 0, 27, 21, 75, 77, 55, 90, 37, 70), Array(91, 53, 13, 64, 36, 62, 54, 41, 6, 89, 14, 19, 75, 40, 16, 87, 44, 23, 3, 56, 71, 93, 76, 37, 86, 65, 11, 92, 45, 84, 79, 10, 12, 28, 85, 58, 32, 98, 29, 63, 70, 88, 2, 1, 90, 42, 31, 51, 5, 43, 60, 77, 78, 39, 82, 96, 8, 66, 73, 61, 57, 34, 46, 68, 25, 69, 27, 72, 80, 21, 99, 83, 49, 20, 18, 94, 59, 95, 17, 55, 24, 38, 33, 9, 67, 26, 50, 52, 30, 48, 97, 7, 0, 15, 81, 4, 74, 22, 35, 47), 21464, 162108)
    pareto insert ((s2.dist1, s2.dist2), s2)
    val s3 = new MOSol(Array(91, 43, 42, 64, 95, 62, 8, 41, 86, 89, 31, 19, 75, 2, 10, 87, 14, 23, 3, 56, 73, 93, 76, 37, 80, 65, 11, 92, 33, 38, 79, 44, 36, 82, 85, 83, 4, 98, 81, 53, 13, 88, 45, 49, 90, 28, 71, 99, 5, 72, 60, 47, 78, 1, 6, 96, 24, 66, 16, 61, 57, 34, 46, 39, 25, 69, 27, 84, 63, 21, 40, 20, 67, 58, 18, 32, 59, 51, 17, 55, 68, 94, 54, 9, 29, 26, 50, 52, 30, 48, 97, 7, 0, 15, 12, 77, 74, 22, 35, 70), Array(92, 53, 13, 18, 36, 48, 54, 91, 6, 83, 14, 26, 94, 40, 16, 93, 58, 78, 74, 11, 71, 69, 97, 17, 56, 64, 85, 66, 45, 84, 88, 10, 75, 28, 61, 98, 32, 23, 29, 63, 70, 7, 2, 1, 31, 42, 62, 51, 89, 43, 86, 77, 87, 39, 82, 79, 19, 60, 73, 76, 50, 59, 5, 68, 3, 25, 57, 72, 80, 65, 99, 46, 49, 20, 96, 12, 22, 95, 52, 30, 24, 38, 33, 35, 67, 34, 8, 15, 41, 9, 44, 0, 27, 21, 81, 4, 55, 90, 37, 47), 21618, 169237)
    pareto insert ((s3.dist1, s3.dist2), s3)
    val s4 = new MOSol(Array(92, 43, 42, 18, 51, 48, 8, 91, 56, 83, 14, 26, 36, 2, 16, 21, 73, 78, 74, 11, 71, 93, 44, 17, 80, 64, 85, 66, 33, 47, 88, 10, 12, 82, 61, 98, 4, 23, 29, 53, 13, 7, 45, 49, 97, 28, 62, 99, 89, 81, 86, 77, 87, 63, 6, 79, 19, 60, 20, 76, 50, 59, 5, 1, 65, 3, 57, 84, 39, 25, 40, 46, 68, 58, 96, 32, 22, 95, 52, 30, 67, 94, 54, 35, 72, 34, 24, 15, 41, 9, 31, 0, 27, 69, 75, 38, 55, 90, 37, 70), Array(91, 63, 13, 65, 36, 62, 54, 41, 6, 89, 31, 19, 32, 40, 10, 87, 14, 23, 3, 56, 58, 15, 76, 37, 86, 69, 11, 92, 45, 38, 79, 90, 75, 28, 85, 83, 12, 98, 95, 68, 70, 88, 2, 1, 22, 42, 71, 29, 5, 43, 60, 4, 78, 39, 82, 96, 8, 66, 73, 61, 57, 34, 46, 53, 25, 64, 27, 80, 72, 93, 99, 20, 84, 16, 18, 94, 59, 51, 17, 55, 24, 49, 33, 9, 67, 26, 50, 52, 30, 48, 97, 7, 0, 21, 81, 77, 74, 44, 35, 47), 22017, 146874)
    pareto insert ((s4.dist1, s4.dist2), s4)
    val s5 = new MOSol(Array(91, 63, 42, 65, 36, 62, 54, 41, 6, 89, 31, 19, 32, 40, 10, 87, 14, 23, 3, 56, 58, 15, 76, 37, 86, 69, 11, 92, 45, 38, 79, 90, 75, 28, 26, 83, 12, 98, 4, 68, 70, 88, 13, 1, 22, 2, 71, 51, 5, 43, 60, 77, 78, 39, 82, 96, 8, 66, 73, 61, 57, 85, 46, 53, 25, 64, 27, 80, 72, 93, 99, 20, 84, 16, 18, 94, 59, 95, 17, 55, 24, 49, 33, 9, 67, 34, 50, 52, 30, 48, 97, 7, 0, 21, 81, 29, 74, 44, 35, 47), Array(92, 43, 45, 18, 38, 48, 8, 91, 56, 83, 14, 26, 36, 42, 16, 21, 73, 78, 74, 11, 71, 93, 44, 17, 80, 64, 34, 66, 33, 95, 88, 10, 12, 82, 85, 98, 4, 23, 29, 53, 13, 7, 2, 49, 97, 28, 62, 99, 89, 81, 86, 47, 87, 63, 6, 79, 19, 60, 20, 76, 50, 59, 5, 1, 65, 3, 57, 84, 39, 25, 40, 46, 68, 58, 96, 32, 22, 51, 52, 30, 67, 94, 54, 35, 72, 61, 24, 15, 41, 9, 31, 0, 27, 69, 75, 77, 55, 90, 37, 70), 22366, 138992)
    pareto insert ((s5.dist1, s5.dist2), s5)
    val s6 = new MOSol(Array(91, 63, 42, 65, 36, 62, 54, 41, 6, 89, 14, 19, 32, 40, 16, 87, 44, 23, 3, 56, 71, 15, 76, 37, 86, 69, 11, 92, 2, 38, 79, 10, 75, 45, 26, 73, 12, 98, 4, 68, 70, 88, 13, 1, 22, 28, 97, 51, 5, 43, 60, 77, 78, 39, 82, 96, 8, 66, 20, 61, 57, 85, 46, 53, 25, 64, 27, 80, 72, 93, 99, 83, 84, 58, 18, 94, 59, 95, 17, 55, 24, 49, 33, 9, 67, 34, 50, 52, 30, 48, 31, 7, 0, 21, 81, 29, 74, 90, 35, 47), Array(92, 43, 28, 18, 38, 48, 8, 91, 56, 83, 31, 26, 36, 42, 10, 21, 14, 78, 74, 11, 58, 93, 44, 17, 80, 64, 34, 66, 45, 95, 88, 90, 12, 82, 85, 98, 4, 23, 29, 53, 13, 7, 2, 49, 16, 33, 62, 99, 89, 81, 86, 47, 87, 63, 6, 79, 19, 60, 73, 76, 50, 59, 5, 1, 65, 3, 57, 84, 39, 25, 40, 20, 68, 35, 96, 32, 22, 51, 52, 30, 67, 94, 54, 71, 72, 61, 24, 15, 41, 9, 97, 0, 27, 69, 75, 77, 55, 46, 37, 70), 22630, 134592)
    pareto insert ((s6.dist1, s6.dist2), s6)
    val s7 = new MOSol(Array(92, 63, 42, 18, 36, 48, 54, 0, 11, 83, 31, 26, 32, 40, 10, 87, 14, 93, 74, 61, 58, 15, 44, 17, 8, 64, 34, 66, 2, 38, 88, 90, 75, 45, 85, 98, 12, 23, 4, 68, 70, 91, 13, 1, 16, 28, 62, 95, 89, 43, 86, 29, 69, 39, 82, 79, 6, 60, 73, 76, 50, 59, 5, 53, 65, 3, 57, 80, 72, 25, 99, 20, 84, 35, 96, 94, 22, 51, 52, 30, 24, 49, 33, 71, 67, 19, 56, 78, 41, 9, 97, 7, 27, 21, 81, 77, 55, 46, 37, 47), Array(7, 43, 28, 65, 38, 62, 56, 91, 24, 89, 14, 8, 36, 42, 16, 21, 44, 23, 3, 85, 71, 93, 76, 37, 80, 69, 11, 92, 45, 51, 79, 10, 12, 82, 26, 73, 4, 98, 29, 53, 13, 88, 2, 49, 22, 33, 97, 99, 5, 81, 60, 77, 78, 63, 6, 96, 86, 66, 20, 61, 57, 19, 46, 1, 25, 64, 27, 84, 39, 52, 40, 83, 68, 58, 18, 32, 59, 95, 87, 55, 67, 94, 54, 9, 72, 34, 50, 15, 30, 48, 31, 41, 0, 17, 75, 47, 74, 90, 35, 70), 23663, 122727)
    pareto insert ((s7.dist1, s7.dist2), s7)
    val s8 = new MOSol(Array(7, 63, 42, 65, 36, 62, 56, 91, 6, 89, 14, 8, 32, 40, 16, 21, 44, 23, 3, 85, 71, 93, 76, 35, 60, 69, 11, 92, 2, 38, 79, 10, 75, 45, 26, 37, 12, 98, 4, 68, 70, 88, 13, 1, 22, 28, 97, 77, 5, 43, 82, 29, 78, 39, 33, 96, 86, 66, 73, 61, 57, 19, 46, 53, 25, 64, 27, 80, 72, 52, 99, 83, 84, 20, 18, 94, 59, 95, 87, 55, 24, 49, 54, 9, 67, 34, 50, 15, 30, 48, 31, 41, 0, 17, 81, 51, 74, 90, 58, 47), Array(92, 43, 28, 18, 38, 48, 8, 0, 11, 83, 31, 26, 36, 42, 10, 87, 14, 93, 74, 61, 73, 15, 44, 17, 80, 64, 34, 66, 45, 51, 88, 90, 12, 54, 85, 23, 4, 35, 29, 53, 13, 91, 2, 49, 16, 33, 62, 99, 89, 81, 86, 95, 69, 63, 82, 79, 6, 60, 98, 76, 24, 59, 5, 1, 65, 3, 57, 84, 39, 25, 40, 20, 68, 58, 96, 32, 22, 47, 52, 30, 67, 94, 50, 71, 72, 19, 56, 78, 41, 9, 97, 7, 27, 21, 75, 77, 55, 46, 37, 70), 23896, 117595)
    pareto insert ((s8.dist1, s8.dist2), s8)
    val s9 = new MOSol(Array(7, 63, 45, 18, 36, 62, 56, 41, 6, 83, 14, 8, 32, 47, 16, 21, 44, 93, 91, 85, 73, 87, 76, 17, 60, 64, 11, 92, 2, 38, 79, 10, 75, 28, 26, 23, 51, 35, 4, 68, 70, 88, 13, 1, 22, 42, 97, 40, 89, 43, 82, 77, 69, 39, 33, 96, 86, 66, 98, 61, 57, 19, 46, 53, 65, 3, 27, 80, 72, 25, 99, 20, 84, 58, 48, 94, 59, 95, 52, 55, 24, 49, 54, 71, 67, 34, 50, 78, 30, 9, 31, 5, 0, 15, 81, 12, 74, 90, 37, 29), Array(92, 43, 28, 65, 38, 91, 8, 0, 11, 89, 31, 26, 95, 42, 10, 93, 14, 23, 3, 61, 71, 15, 44, 35, 80, 69, 34, 66, 33, 99, 88, 90, 12, 54, 85, 37, 4, 98, 29, 53, 47, 7, 45, 49, 16, 2, 62, 13, 74, 81, 86, 36, 78, 63, 82, 79, 6, 60, 73, 76, 24, 59, 5, 1, 25, 64, 57, 84, 39, 52, 40, 83, 68, 20, 96, 32, 22, 51, 87, 30, 67, 94, 50, 9, 72, 19, 56, 21, 41, 48, 97, 18, 27, 17, 75, 77, 55, 46, 58, 70), 25081, 107404)
    pareto insert ((s9.dist1, s9.dist2), s9)
    val s10 = new MOSol(Array(7, 63, 42, 65, 36, 62, 56, 96, 6, 89, 14, 8, 32, 47, 16, 17, 44, 23, 3, 85, 71, 87, 76, 35, 60, 69, 11, 92, 2, 38, 88, 10, 75, 45, 26, 37, 51, 98, 4, 68, 70, 91, 13, 1, 22, 28, 97, 40, 5, 43, 82, 77, 78, 39, 33, 79, 86, 66, 73, 61, 57, 19, 46, 53, 25, 64, 27, 80, 72, 52, 99, 83, 84, 20, 55, 94, 59, 95, 93, 30, 24, 49, 54, 9, 67, 34, 50, 15, 41, 48, 31, 18, 0, 21, 81, 12, 74, 90, 58, 29), Array(92, 43, 28, 18, 38, 48, 8, 0, 11, 83, 31, 26, 95, 42, 10, 87, 14, 15, 91, 61, 73, 93, 44, 17, 80, 64, 34, 66, 45, 99, 79, 90, 12, 54, 85, 23, 4, 35, 29, 53, 47, 88, 2, 49, 16, 33, 62, 13, 89, 81, 86, 36, 69, 63, 82, 74, 6, 60, 98, 76, 24, 59, 5, 1, 65, 3, 57, 84, 39, 25, 40, 20, 68, 58, 96, 32, 22, 51, 52, 55, 67, 94, 50, 71, 72, 19, 56, 21, 30, 9, 97, 41, 27, 78, 75, 77, 7, 46, 37, 70), 25442, 103452)
    pareto insert ((s10.dist1, s10.dist2), s10)
    val s11 = new MOSol(Array(7, 63, 45, 65, 36, 62, 56, 96, 6, 89, 14, 8, 32, 47, 16, 17, 44, 23, 3, 85, 71, 87, 76, 35, 60, 69, 11, 0, 2, 38, 41, 10, 75, 28, 26, 37, 51, 98, 4, 68, 70, 91, 13, 1, 22, 42, 97, 40, 5, 43, 82, 77, 78, 39, 33, 79, 86, 66, 73, 61, 57, 19, 46, 53, 25, 64, 92, 80, 72, 52, 99, 83, 84, 20, 55, 94, 59, 95, 93, 88, 24, 49, 54, 9, 67, 34, 50, 15, 30, 48, 31, 18, 27, 21, 81, 12, 74, 90, 58, 29), Array(27, 43, 28, 18, 38, 48, 8, 0, 11, 83, 31, 26, 95, 42, 10, 87, 14, 15, 91, 61, 73, 93, 44, 17, 80, 64, 34, 92, 33, 99, 88, 90, 12, 54, 85, 23, 4, 35, 29, 53, 47, 30, 45, 49, 16, 2, 62, 13, 89, 81, 86, 36, 69, 63, 82, 74, 6, 60, 98, 76, 24, 59, 5, 1, 65, 3, 57, 84, 39, 25, 40, 20, 68, 58, 96, 32, 22, 51, 52, 55, 67, 94, 50, 71, 72, 19, 56, 21, 79, 9, 97, 41, 66, 78, 75, 77, 7, 46, 37, 70), 25714, 101528)
    pareto insert ((s11.dist1, s11.dist2), s11)
    val s12 = new MOSol(Array(7, 63, 45, 65, 36, 62, 56, 96, 6, 89, 58, 8, 32, 47, 16, 17, 44, 23, 3, 85, 71, 87, 76, 35, 60, 69, 11, 0, 2, 38, 41, 10, 75, 28, 26, 98, 51, 83, 4, 72, 70, 91, 13, 1, 22, 42, 97, 40, 5, 43, 82, 95, 78, 39, 33, 79, 86, 66, 20, 61, 57, 19, 46, 53, 25, 64, 92, 68, 80, 52, 99, 73, 84, 14, 55, 94, 59, 12, 93, 88, 24, 49, 54, 9, 67, 34, 50, 15, 30, 48, 31, 18, 27, 21, 81, 77, 74, 90, 37, 29), Array(27, 43, 28, 18, 38, 48, 8, 0, 11, 83, 31, 26, 77, 42, 73, 87, 14, 15, 91, 61, 58, 93, 44, 17, 80, 64, 34, 92, 33, 99, 88, 90, 12, 54, 85, 23, 4, 98, 29, 53, 47, 30, 45, 49, 16, 2, 62, 13, 89, 81, 86, 36, 69, 63, 82, 74, 6, 60, 10, 76, 24, 59, 5, 1, 65, 3, 57, 84, 67, 25, 40, 20, 39, 71, 96, 32, 22, 95, 52, 55, 68, 94, 50, 37, 72, 19, 56, 21, 79, 9, 97, 41, 66, 78, 75, 51, 7, 46, 35, 70), 26177, 98921)
    pareto insert ((s12.dist1, s12.dist2), s12)
    val s13 = new MOSol(Array(27, 43, 28, 18, 38, 62, 8, 0, 11, 89, 58, 26, 77, 42, 73, 87, 14, 15, 91, 61, 71, 93, 44, 17, 80, 64, 34, 92, 33, 99, 88, 10, 12, 54, 85, 23, 4, 35, 29, 53, 47, 30, 45, 49, 16, 2, 97, 13, 5, 81, 86, 36, 69, 63, 82, 74, 6, 60, 98, 76, 24, 59, 46, 1, 65, 3, 57, 84, 67, 25, 40, 83, 39, 20, 96, 32, 22, 95, 52, 55, 68, 94, 50, 9, 72, 19, 56, 21, 79, 48, 31, 41, 66, 78, 75, 51, 7, 90, 37, 70), Array(7, 63, 45, 65, 36, 48, 56, 96, 6, 83, 31, 8, 32, 47, 16, 17, 44, 23, 3, 85, 73, 87, 76, 35, 60, 69, 11, 0, 2, 38, 41, 90, 75, 28, 26, 37, 51, 98, 4, 72, 70, 91, 13, 1, 22, 42, 62, 40, 89, 43, 82, 95, 78, 39, 33, 79, 86, 66, 10, 61, 57, 19, 5, 53, 25, 64, 92, 68, 80, 52, 99, 20, 84, 14, 55, 94, 59, 12, 93, 88, 24, 49, 54, 71, 67, 34, 50, 15, 30, 9, 97, 18, 27, 21, 81, 77, 74, 46, 58, 29), 26473, 97348)
    pareto insert ((s13.dist1, s13.dist2), s13)
    val s14 = new MOSol(Array(7, 43, 28, 65, 38, 62, 8, 96, 11, 89, 31, 26, 95, 42, 73, 17, 14, 23, 3, 61, 71, 87, 44, 35, 80, 69, 34, 92, 33, 99, 41, 97, 12, 54, 85, 37, 4, 98, 29, 53, 47, 91, 45, 49, 16, 2, 0, 13, 5, 81, 86, 36, 78, 63, 82, 79, 6, 60, 10, 76, 24, 59, 46, 1, 25, 64, 57, 84, 39, 52, 40, 83, 68, 20, 55, 32, 22, 51, 93, 88, 67, 94, 50, 9, 72, 19, 56, 15, 30, 48, 27, 18, 66, 21, 75, 77, 74, 90, 58, 70), Array(46, 63, 45, 18, 36, 48, 56, 0, 6, 83, 58, 8, 32, 47, 16, 87, 44, 15, 91, 85, 73, 93, 76, 17, 60, 64, 11, 90, 2, 38, 88, 10, 75, 28, 26, 23, 51, 35, 4, 68, 70, 30, 13, 1, 22, 42, 62, 40, 89, 43, 82, 77, 69, 39, 33, 74, 86, 66, 98, 61, 57, 19, 5, 53, 65, 3, 92, 80, 72, 25, 99, 20, 84, 14, 96, 94, 59, 95, 52, 55, 24, 49, 54, 71, 67, 34, 50, 21, 79, 9, 97, 41, 27, 78, 81, 12, 7, 31, 37, 29), 26628, 97410)
    pareto insert ((s14.dist1, s14.dist2), s14)
    val s15 = new MOSol(Array(7, 43, 28, 65, 38, 62, 8, 96, 11, 89, 31, 26, 77, 42, 73, 17, 14, 23, 3, 61, 71, 87, 44, 35, 80, 69, 34, 92, 33, 99, 41, 97, 12, 54, 85, 37, 4, 98, 29, 53, 47, 91, 45, 49, 16, 2, 0, 13, 5, 81, 86, 36, 78, 63, 82, 79, 6, 60, 10, 76, 24, 59, 46, 1, 25, 64, 57, 84, 67, 52, 40, 83, 39, 20, 55, 32, 22, 95, 93, 88, 68, 94, 50, 9, 72, 19, 56, 15, 30, 48, 27, 18, 66, 21, 75, 51, 74, 90, 58, 70), Array(46, 63, 45, 18, 36, 48, 56, 0, 6, 83, 58, 8, 32, 47, 16, 87, 44, 15, 91, 85, 73, 93, 76, 17, 60, 64, 11, 90, 2, 38, 88, 10, 75, 28, 26, 23, 51, 35, 4, 72, 70, 30, 13, 1, 22, 42, 62, 40, 89, 43, 82, 95, 69, 39, 33, 74, 86, 66, 98, 61, 57, 19, 5, 53, 65, 3, 92, 68, 80, 25, 99, 20, 84, 14, 96, 94, 59, 12, 52, 55, 24, 49, 54, 71, 67, 34, 50, 21, 79, 9, 97, 41, 27, 78, 81, 77, 7, 31, 37, 29), 26863, 96111)
    pareto insert ((s15.dist1, s15.dist2), s15)
    val s16 = new MOSol(Array(27, 43, 70, 18, 36, 62, 8, 0, 11, 89, 58, 26, 32, 42, 73, 87, 14, 15, 91, 61, 71, 93, 44, 17, 60, 64, 34, 92, 2, 38, 88, 10, 75, 45, 85, 23, 51, 35, 84, 53, 13, 30, 54, 49, 16, 28, 97, 40, 5, 81, 86, 95, 69, 63, 82, 74, 6, 50, 98, 76, 57, 59, 46, 1, 65, 3, 39, 72, 80, 25, 99, 83, 68, 20, 96, 94, 22, 47, 52, 55, 24, 12, 33, 9, 67, 19, 56, 21, 79, 48, 31, 41, 66, 78, 4, 77, 7, 90, 37, 29), Array(7, 63, 28, 65, 94, 48, 56, 96, 6, 83, 31, 8, 81, 40, 16, 17, 44, 23, 3, 85, 73, 87, 76, 35, 80, 69, 11, 0, 45, 99, 41, 90, 12, 82, 26, 37, 4, 98, 29, 66, 47, 91, 13, 1, 22, 33, 62, 77, 89, 43, 57, 36, 78, 39, 42, 79, 86, 60, 10, 61, 24, 19, 5, 53, 25, 64, 92, 84, 72, 52, 2, 20, 67, 14, 55, 32, 59, 95, 93, 88, 68, 49, 54, 71, 38, 34, 50, 15, 30, 9, 97, 18, 27, 21, 75, 51, 74, 46, 58, 70), 27097, 93980)
    pareto insert ((s16.dist1, s16.dist2), s16)
    val s17 = new MOSol(Array(27, 43, 28, 65, 38, 62, 8, 0, 11, 89, 58, 26, 77, 42, 73, 17, 14, 23, 91, 61, 71, 87, 44, 35, 80, 64, 34, 92, 33, 99, 88, 10, 12, 54, 85, 83, 4, 78, 29, 53, 47, 30, 45, 49, 16, 2, 97, 13, 5, 81, 86, 36, 69, 63, 82, 74, 6, 60, 98, 76, 24, 59, 18, 1, 3, 93, 57, 84, 67, 25, 40, 46, 39, 20, 96, 32, 22, 95, 52, 55, 68, 94, 50, 9, 72, 19, 56, 15, 79, 48, 31, 41, 66, 21, 75, 51, 7, 90, 37, 70), Array(7, 63, 45, 64, 36, 48, 56, 96, 6, 83, 31, 8, 32, 47, 16, 87, 44, 15, 62, 85, 73, 93, 76, 17, 60, 69, 11, 0, 2, 38, 41, 90, 75, 28, 26, 23, 51, 98, 4, 72, 70, 91, 13, 1, 22, 42, 71, 40, 89, 43, 82, 95, 78, 39, 33, 79, 86, 66, 10, 61, 57, 19, 5, 53, 25, 3, 92, 68, 80, 52, 99, 20, 84, 14, 55, 94, 59, 12, 37, 88, 24, 49, 54, 35, 67, 34, 50, 21, 30, 9, 97, 18, 27, 65, 81, 77, 74, 46, 58, 29), 27471, 93502)
    pareto insert ((s17.dist1, s17.dist2), s17)
    val s18 = new MOSol(Array(46, 63, 28, 65, 94, 3, 56, 0, 6, 89, 58, 8, 81, 40, 16, 17, 44, 23, 91, 85, 73, 15, 76, 35, 80, 69, 11, 90, 45, 99, 18, 10, 12, 82, 26, 83, 4, 78, 29, 66, 47, 30, 13, 1, 22, 33, 71, 77, 74, 43, 57, 36, 96, 39, 42, 79, 86, 60, 98, 61, 24, 19, 5, 53, 25, 64, 92, 84, 72, 52, 2, 20, 67, 14, 55, 32, 59, 95, 93, 88, 68, 49, 54, 9, 38, 34, 50, 21, 41, 48, 97, 62, 27, 87, 75, 51, 7, 31, 37, 70), Array(7, 43, 70, 5, 36, 62, 8, 96, 11, 83, 31, 26, 32, 42, 73, 21, 14, 15, 30, 61, 71, 87, 44, 17, 60, 64, 34, 92, 2, 38, 41, 97, 75, 45, 85, 23, 51, 98, 84, 53, 13, 88, 54, 49, 16, 28, 0, 40, 89, 81, 86, 95, 69, 63, 82, 74, 6, 50, 10, 76, 57, 59, 91, 1, 65, 3, 39, 72, 80, 25, 99, 46, 68, 20, 48, 94, 22, 47, 37, 55, 24, 12, 33, 35, 67, 19, 56, 93, 79, 9, 27, 18, 66, 78, 4, 77, 52, 90, 58, 29), 29580, 85229)
    pareto insert ((s18.dist1, s18.dist2), s18)
    val s19 = new MOSol(Array(27, 43, 70, 65, 36, 3, 33, 0, 56, 83, 58, 8, 32, 42, 16, 17, 44, 23, 91, 85, 73, 87, 46, 35, 60, 69, 11, 92, 2, 38, 79, 10, 75, 45, 26, 18, 51, 78, 84, 53, 13, 30, 54, 49, 22, 28, 97, 40, 89, 81, 76, 95, 96, 63, 82, 74, 6, 88, 98, 61, 57, 19, 5, 1, 25, 64, 39, 72, 80, 52, 99, 20, 68, 14, 48, 94, 59, 47, 93, 55, 24, 12, 86, 71, 67, 34, 50, 15, 41, 9, 31, 62, 66, 21, 4, 77, 7, 90, 37, 29), Array(7, 63, 28, 5, 94, 62, 56, 96, 11, 89, 31, 26, 81, 40, 73, 87, 14, 15, 35, 61, 71, 93, 44, 17, 80, 64, 34, 0, 45, 99, 41, 90, 12, 6, 85, 23, 4, 98, 29, 66, 47, 88, 13, 1, 16, 33, 22, 77, 74, 43, 86, 36, 69, 39, 42, 79, 8, 60, 10, 76, 24, 59, 91, 53, 65, 3, 92, 84, 72, 25, 2, 83, 67, 20, 55, 32, 50, 95, 37, 30, 68, 49, 54, 9, 38, 19, 82, 21, 57, 48, 97, 18, 27, 78, 75, 51, 52, 46, 58, 70), 30438, 83839)
    pareto insert ((s19.dist1, s19.dist2), s19)
  }

  def insertScull2() {

    val s20 = new MOSol(Array(27, 63, 28, 65, 94, 3, 56, 0, 11, 83, 58, 26, 81, 40, 16, 17, 44, 23, 91, 61, 73, 15, 46, 35, 80, 69, 34, 92, 45, 99, 79, 10, 12, 6, 85, 18, 4, 78, 29, 72, 47, 30, 13, 1, 22, 33, 97, 77, 89, 43, 86, 36, 96, 88, 42, 74, 8, 60, 98, 76, 24, 59, 5, 53, 25, 64, 57, 84, 39, 52, 2, 20, 67, 14, 48, 32, 50, 95, 93, 55, 68, 49, 54, 71, 38, 19, 82, 21, 41, 9, 31, 62, 66, 87, 75, 51, 7, 90, 37, 70), Array(7, 43, 70, 5, 36, 62, 33, 96, 56, 89, 31, 8, 32, 42, 73, 21, 14, 15, 35, 85, 71, 87, 44, 17, 60, 64, 11, 0, 2, 38, 41, 90, 75, 45, 26, 23, 51, 98, 84, 68, 13, 88, 54, 49, 16, 28, 22, 40, 74, 81, 76, 95, 69, 63, 82, 79, 6, 66, 10, 61, 57, 19, 91, 1, 65, 3, 92, 72, 80, 25, 99, 83, 39, 20, 55, 94, 59, 47, 37, 30, 24, 12, 86, 9, 67, 34, 50, 93, 53, 48, 97, 18, 27, 78, 4, 77, 52, 46, 58, 29), 30484, 83748)
    pareto insert ((s20.dist1, s20.dist2), s20)
    val s21 = new MOSol(Array(7, 43, 70, 5, 36, 62, 56, 96, 6, 83, 31, 8, 32, 42, 16, 21, 44, 15, 35, 85, 73, 87, 76, 17, 60, 64, 11, 92, 2, 38, 41, 97, 75, 45, 26, 23, 51, 98, 84, 53, 13, 88, 54, 49, 22, 28, 0, 40, 89, 81, 30, 95, 78, 63, 82, 25, 86, 46, 10, 61, 57, 19, 91, 1, 65, 3, 39, 72, 80, 52, 99, 20, 68, 14, 48, 94, 59, 47, 37, 55, 24, 12, 33, 71, 67, 34, 50, 93, 79, 9, 27, 18, 66, 69, 4, 77, 74, 90, 58, 29), Array(46, 63, 28, 65, 94, 3, 8, 0, 11, 89, 58, 26, 81, 40, 73, 17, 14, 23, 91, 61, 71, 15, 44, 35, 80, 55, 34, 90, 45, 99, 50, 10, 12, 82, 85, 18, 4, 78, 29, 66, 47, 30, 13, 1, 16, 33, 57, 77, 74, 43, 86, 36, 69, 39, 42, 79, 6, 60, 98, 76, 24, 59, 5, 53, 25, 64, 92, 84, 72, 93, 2, 83, 67, 20, 96, 32, 22, 95, 52, 88, 68, 49, 54, 9, 38, 19, 56, 21, 41, 48, 97, 62, 27, 87, 75, 51, 7, 31, 37, 70), 30763, 83183)
    pareto insert ((s21.dist1, s21.dist2), s21)
    val s22 = new MOSol(Array(27, 43, 70, 65, 36, 3, 33, 0, 56, 89, 20, 8, 32, 42, 73, 21, 14, 15, 91, 85, 9, 87, 44, 17, 60, 69, 11, 92, 2, 38, 18, 97, 75, 45, 26, 23, 51, 98, 84, 53, 13, 30, 54, 49, 16, 28, 22, 40, 74, 81, 76, 95, 96, 63, 82, 79, 6, 46, 31, 61, 57, 19, 5, 1, 25, 64, 39, 72, 80, 52, 99, 83, 68, 71, 55, 94, 59, 47, 37, 88, 24, 12, 86, 35, 67, 34, 50, 93, 41, 48, 10, 62, 66, 78, 4, 77, 7, 90, 58, 29), Array(7, 63, 28, 5, 94, 62, 56, 96, 11, 20, 90, 26, 81, 40, 16, 17, 44, 23, 30, 61, 10, 15, 46, 35, 80, 64, 34, 0, 45, 99, 41, 58, 12, 6, 85, 83, 4, 78, 29, 66, 47, 88, 13, 1, 22, 33, 57, 77, 89, 43, 86, 36, 69, 39, 42, 74, 8, 60, 98, 76, 24, 59, 91, 53, 65, 3, 92, 84, 72, 25, 2, 73, 67, 14, 48, 32, 50, 95, 93, 55, 68, 49, 54, 71, 38, 19, 82, 21, 79, 9, 97, 18, 27, 87, 75, 51, 52, 31, 37, 70), 31262, 81080)
    pareto insert ((s22.dist1, s22.dist2), s22)
    val s23 = new MOSol(Array(48, 63, 28, 65, 94, 3, 56, 0, 11, 20, 31, 26, 81, 40, 16, 17, 44, 23, 91, 61, 73, 15, 46, 35, 80, 69, 34, 92, 45, 99, 79, 97, 12, 6, 85, 18, 4, 98, 29, 72, 47, 30, 13, 1, 22, 33, 71, 77, 89, 43, 86, 36, 78, 88, 42, 74, 8, 60, 10, 76, 24, 59, 5, 53, 25, 64, 57, 38, 39, 52, 2, 83, 84, 14, 96, 32, 50, 95, 37, 55, 68, 49, 54, 93, 67, 19, 82, 21, 41, 9, 27, 62, 66, 87, 75, 51, 7, 90, 58, 70), Array(7, 43, 70, 5, 36, 62, 33, 96, 56, 89, 58, 8, 32, 42, 73, 21, 14, 15, 35, 85, 9, 87, 44, 17, 60, 64, 11, 90, 2, 38, 41, 10, 75, 45, 26, 23, 51, 78, 67, 68, 13, 88, 54, 49, 16, 28, 22, 40, 0, 81, 76, 95, 69, 63, 82, 79, 6, 66, 98, 61, 57, 19, 91, 1, 65, 3, 92, 84, 80, 25, 99, 46, 39, 20, 55, 94, 59, 47, 52, 30, 24, 12, 86, 71, 72, 34, 50, 93, 53, 48, 97, 18, 27, 83, 4, 77, 74, 31, 37, 29), 31703, 80148)
    pareto insert ((s23.dist1, s23.dist2), s23)
    val s24 = new MOSol(Array(7, 63, 70, 5, 36, 62, 33, 96, 56, 83, 31, 8, 81, 42, 16, 21, 44, 15, 35, 85, 10, 87, 76, 17, 80, 64, 11, 0, 2, 38, 41, 90, 12, 45, 26, 23, 51, 98, 4, 66, 13, 88, 54, 1, 22, 28, 57, 40, 89, 43, 30, 95, 78, 39, 82, 25, 6, 60, 20, 61, 24, 19, 91, 53, 65, 3, 92, 84, 67, 52, 99, 73, 94, 14, 48, 32, 59, 47, 37, 55, 68, 49, 86, 71, 72, 34, 50, 93, 79, 9, 97, 18, 27, 69, 75, 77, 74, 46, 58, 29), Array(27, 43, 28, 65, 38, 3, 56, 0, 11, 89, 20, 26, 32, 40, 73, 17, 14, 23, 91, 61, 58, 15, 44, 35, 60, 55, 34, 92, 45, 99, 50, 10, 75, 6, 85, 18, 4, 78, 29, 53, 47, 30, 13, 49, 16, 33, 97, 77, 74, 81, 86, 36, 69, 63, 42, 79, 8, 46, 98, 76, 57, 59, 5, 1, 25, 64, 39, 68, 80, 93, 2, 83, 84, 71, 96, 94, 22, 95, 52, 88, 24, 12, 54, 9, 67, 19, 82, 21, 41, 48, 31, 62, 66, 87, 72, 51, 7, 90, 37, 70), 31712, 80854)
    pareto insert ((s24.dist1, s24.dist2), s24)
    val s25 = new MOSol(Array(27, 43, 70, 5, 36, 62, 33, 0, 56, 89, 20, 8, 32, 42, 16, 21, 44, 15, 35, 85, 9, 87, 76, 17, 60, 64, 11, 92, 2, 38, 41, 97, 75, 45, 26, 23, 51, 98, 4, 53, 13, 88, 54, 49, 22, 28, 71, 40, 74, 81, 30, 95, 78, 63, 82, 25, 6, 46, 31, 61, 57, 19, 91, 1, 65, 3, 39, 68, 80, 52, 99, 83, 84, 14, 96, 94, 59, 47, 37, 55, 24, 12, 86, 73, 67, 34, 50, 93, 79, 48, 10, 18, 66, 69, 72, 77, 7, 90, 58, 29), Array(7, 63, 28, 65, 38, 3, 56, 96, 11, 20, 90, 26, 81, 40, 73, 17, 14, 23, 91, 61, 10, 15, 44, 35, 80, 55, 34, 0, 45, 99, 50, 58, 12, 6, 85, 18, 4, 78, 29, 66, 47, 30, 13, 1, 16, 33, 57, 77, 89, 43, 86, 36, 69, 39, 42, 79, 8, 60, 98, 76, 24, 59, 5, 53, 25, 64, 92, 84, 67, 93, 2, 46, 94, 83, 48, 32, 22, 95, 52, 88, 68, 49, 54, 71, 72, 19, 82, 21, 41, 9, 97, 62, 27, 87, 75, 51, 74, 31, 37, 70), 33105, 76908)
    pareto insert ((s25.dist1, s25.dist2), s25)
    val s26 = new MOSol(Array(92, 43, 28, 65, 38, 3, 56, 0, 19, 89, 58, 26, 81, 40, 73, 17, 14, 23, 91, 61, 9, 15, 44, 35, 80, 69, 34, 90, 45, 99, 18, 10, 12, 6, 59, 83, 4, 78, 29, 72, 47, 30, 13, 49, 16, 33, 57, 77, 74, 53, 86, 36, 96, 63, 42, 79, 8, 60, 98, 76, 24, 85, 5, 50, 25, 64, 39, 94, 66, 52, 2, 46, 84, 20, 55, 32, 22, 95, 93, 88, 68, 1, 54, 71, 67, 11, 82, 21, 41, 48, 97, 62, 27, 87, 75, 51, 7, 31, 37, 70), Array(7, 81, 70, 5, 36, 62, 33, 96, 56, 20, 31, 85, 32, 42, 16, 21, 44, 15, 30, 8, 73, 87, 76, 17, 60, 64, 11, 92, 2, 38, 41, 97, 75, 45, 26, 23, 51, 98, 4, 66, 13, 88, 54, 1, 22, 28, 71, 40, 89, 43, 63, 95, 69, 49, 82, 74, 6, 46, 10, 34, 57, 19, 91, 53, 65, 3, 68, 84, 80, 25, 99, 83, 39, 14, 48, 94, 59, 47, 37, 55, 24, 12, 86, 35, 72, 61, 50, 93, 79, 9, 27, 18, 0, 78, 67, 77, 52, 90, 58, 29), 33585, 75835)
    pareto insert ((s26.dist1, s26.dist2), s26)
    val s27 = new MOSol(Array(7, 63, 70, 5, 36, 62, 33, 96, 56, 20, 31, 8, 81, 42, 16, 21, 44, 15, 35, 85, 71, 87, 46, 17, 80, 64, 11, 92, 2, 38, 79, 97, 12, 45, 26, 23, 51, 98, 4, 72, 13, 30, 54, 1, 22, 28, 0, 40, 89, 43, 76, 95, 69, 88, 82, 74, 6, 60, 10, 57, 24, 19, 91, 53, 65, 3, 61, 94, 39, 25, 99, 83, 84, 14, 48, 32, 59, 47, 37, 55, 68, 49, 86, 73, 67, 34, 50, 93, 41, 9, 27, 18, 66, 78, 75, 77, 52, 90, 58, 29), Array(46, 43, 28, 65, 38, 3, 56, 0, 11, 89, 58, 26, 32, 40, 73, 17, 14, 23, 91, 61, 9, 15, 44, 35, 60, 69, 34, 90, 45, 99, 41, 10, 75, 6, 85, 18, 4, 78, 29, 68, 47, 88, 13, 49, 16, 33, 22, 77, 74, 81, 86, 36, 96, 63, 42, 79, 8, 59, 98, 76, 57, 66, 5, 1, 25, 64, 92, 84, 80, 52, 2, 20, 39, 83, 55, 94, 50, 95, 93, 30, 24, 12, 54, 71, 72, 19, 82, 21, 53, 48, 97, 62, 27, 87, 67, 51, 7, 31, 37, 70), 33628, 75954)
    pareto insert ((s27.dist1, s27.dist2), s27)
    val s28 = new MOSol(Array(92, 43, 70, 64, 36, 41, 33, 0, 56, 20, 58, 8, 32, 42, 73, 17, 14, 23, 91, 85, 71, 15, 44, 35, 60, 69, 11, 90, 2, 38, 88, 10, 75, 45, 26, 18, 51, 78, 67, 66, 47, 30, 54, 49, 16, 28, 61, 13, 89, 81, 86, 77, 96, 63, 82, 74, 6, 53, 98, 76, 57, 19, 5, 1, 25, 3, 68, 84, 80, 52, 99, 46, 39, 83, 48, 94, 22, 95, 87, 55, 24, 12, 50, 93, 72, 34, 59, 21, 79, 9, 97, 62, 27, 65, 4, 40, 7, 31, 37, 29), Array(7, 63, 28, 65, 94, 62, 56, 96, 11, 89, 31, 26, 81, 47, 16, 21, 44, 15, 35, 61, 9, 87, 76, 17, 80, 64, 34, 92, 45, 99, 41, 97, 12, 6, 85, 23, 4, 98, 29, 72, 95, 5, 13, 1, 22, 33, 71, 40, 74, 43, 82, 36, 69, 57, 42, 79, 8, 60, 10, 86, 24, 46, 91, 53, 3, 93, 39, 38, 66, 25, 2, 20, 84, 14, 55, 32, 59, 51, 37, 88, 68, 49, 54, 73, 67, 19, 50, 78, 30, 48, 27, 18, 0, 83, 75, 77, 52, 90, 58, 70), 34914, 72854)
    pareto insert ((s28.dist1, s28.dist2), s28)
    val s29 = new MOSol(Array(27, 43, 70, 5, 36, 62, 33, 0, 56, 20, 90, 85, 32, 42, 16, 21, 44, 15, 30, 8, 10, 87, 46, 17, 60, 69, 11, 92, 2, 38, 41, 58, 75, 45, 26, 23, 51, 78, 4, 53, 47, 88, 54, 49, 35, 28, 71, 13, 89, 81, 76, 77, 96, 63, 82, 74, 6, 59, 98, 34, 57, 19, 91, 1, 25, 3, 39, 68, 80, 52, 99, 83, 84, 14, 48, 94, 22, 95, 64, 55, 24, 12, 86, 73, 67, 61, 50, 93, 79, 9, 97, 18, 66, 65, 72, 40, 7, 31, 37, 29), Array(7, 63, 28, 65, 38, 3, 56, 96, 19, 89, 20, 26, 81, 47, 73, 17, 14, 23, 91, 61, 9, 15, 76, 35, 80, 64, 34, 0, 45, 99, 18, 97, 12, 6, 59, 44, 4, 98, 29, 66, 95, 30, 13, 1, 16, 33, 22, 40, 74, 43, 86, 36, 69, 39, 42, 79, 8, 60, 31, 57, 24, 85, 5, 53, 78, 93, 92, 84, 67, 25, 2, 46, 94, 83, 55, 32, 50, 51, 37, 88, 68, 49, 54, 71, 72, 11, 82, 21, 41, 48, 10, 62, 27, 87, 75, 77, 52, 90, 58, 70), 35434, 71145)
    pareto insert ((s29.dist1, s29.dist2), s29)
    val s30 = new MOSol(Array(27, 43, 70, 5, 38, 62, 33, 0, 56, 20, 90, 8, 32, 42, 16, 21, 44, 15, 30, 26, 10, 87, 46, 17, 60, 69, 34, 92, 2, 4, 41, 58, 75, 45, 11, 23, 51, 78, 67, 68, 47, 88, 54, 49, 35, 28, 71, 13, 89, 81, 86, 77, 96, 63, 82, 74, 6, 53, 98, 76, 57, 85, 91, 1, 25, 3, 61, 84, 80, 52, 99, 83, 39, 14, 48, 94, 22, 95, 64, 55, 24, 12, 50, 73, 72, 19, 59, 93, 79, 9, 97, 18, 66, 65, 36, 40, 7, 31, 37, 29), Array(7, 63, 28, 65, 29, 3, 56, 96, 11, 89, 20, 34, 81, 47, 73, 17, 14, 23, 91, 85, 9, 15, 76, 35, 80, 64, 19, 0, 45, 99, 18, 97, 12, 6, 26, 44, 94, 98, 4, 72, 95, 30, 13, 1, 16, 33, 22, 40, 74, 43, 82, 36, 69, 57, 42, 79, 8, 60, 31, 86, 24, 66, 5, 53, 78, 93, 92, 38, 39, 25, 2, 46, 84, 83, 55, 32, 59, 51, 37, 88, 68, 49, 54, 71, 67, 61, 50, 21, 41, 48, 10, 62, 27, 87, 75, 77, 52, 90, 58, 70), 36625, 68976)
    pareto insert ((s30.dist1, s30.dist2), s30)
    val s31 = new MOSol(Array(27, 43, 28, 5, 38, 62, 8, 0, 19, 20, 90, 26, 77, 42, 16, 21, 44, 15, 30, 61, 10, 87, 46, 17, 60, 69, 34, 92, 45, 99, 41, 58, 12, 54, 59, 23, 94, 78, 29, 72, 47, 88, 51, 49, 35, 33, 71, 13, 89, 81, 86, 36, 96, 63, 82, 74, 6, 53, 98, 76, 57, 85, 91, 1, 25, 3, 39, 68, 80, 52, 2, 83, 84, 14, 48, 4, 22, 95, 64, 55, 24, 32, 50, 73, 67, 11, 56, 93, 79, 9, 97, 18, 66, 65, 75, 40, 7, 31, 37, 70), Array(7, 63, 70, 65, 75, 3, 56, 96, 6, 89, 20, 85, 32, 47, 73, 17, 14, 23, 91, 8, 9, 15, 76, 35, 80, 64, 11, 0, 2, 38, 18, 97, 81, 45, 26, 44, 51, 98, 4, 66, 95, 30, 13, 1, 16, 28, 22, 40, 74, 43, 82, 42, 69, 57, 33, 79, 86, 60, 31, 34, 24, 19, 5, 53, 78, 93, 92, 84, 67, 25, 99, 46, 39, 83, 55, 94, 59, 12, 37, 88, 68, 49, 54, 71, 72, 61, 50, 21, 41, 48, 10, 62, 27, 87, 36, 77, 52, 90, 58, 29), 36973, 68318)
    pareto insert ((s31.dist1, s31.dist2), s31)
    val s32 = new MOSol(Array(27, 43, 28, 5, 38, 62, 56, 0, 19, 37, 20, 26, 77, 42, 73, 21, 14, 15, 35, 61, 71, 87, 44, 17, 60, 69, 34, 92, 45, 99, 41, 97, 12, 6, 59, 23, 94, 98, 29, 72, 47, 88, 51, 49, 16, 33, 22, 13, 89, 81, 30, 36, 96, 63, 82, 74, 8, 53, 31, 76, 57, 85, 91, 1, 25, 3, 39, 68, 80, 52, 2, 46, 84, 83, 48, 4, 54, 95, 64, 55, 24, 32, 86, 93, 67, 11, 50, 78, 79, 9, 10, 18, 66, 65, 75, 40, 7, 90, 58, 70), Array(7, 63, 70, 65, 75, 3, 33, 96, 56, 89, 90, 85, 32, 47, 16, 17, 44, 23, 91, 8, 10, 15, 46, 35, 80, 64, 11, 0, 2, 38, 50, 58, 81, 45, 26, 18, 51, 9, 4, 66, 95, 30, 13, 1, 22, 28, 71, 40, 74, 43, 86, 42, 69, 57, 76, 79, 6, 60, 98, 34, 24, 19, 5, 53, 78, 93, 92, 84, 67, 25, 99, 20, 39, 14, 55, 94, 59, 12, 87, 88, 68, 49, 54, 73, 72, 61, 82, 21, 41, 48, 97, 62, 27, 83, 36, 77, 52, 31, 37, 29), 38327, 66363)
    pareto insert ((s32.dist1, s32.dist2), s32)
    val s33 = new MOSol(Array(7, 63, 70, 5, 38, 62, 33, 96, 56, 89, 31, 8, 77, 42, 16, 21, 44, 15, 35, 85, 10, 87, 46, 17, 60, 64, 11, 92, 2, 51, 41, 97, 12, 45, 26, 23, 94, 98, 67, 68, 47, 88, 54, 1, 91, 28, 71, 13, 9, 43, 86, 36, 69, 49, 82, 74, 6, 53, 20, 76, 57, 19, 30, 81, 78, 3, 61, 84, 80, 25, 99, 83, 39, 14, 48, 4, 22, 95, 37, 55, 24, 32, 50, 73, 72, 34, 59, 93, 79, 0, 27, 18, 66, 65, 75, 40, 52, 90, 58, 29), Array(89, 43, 28, 65, 75, 3, 56, 0, 11, 48, 20, 26, 32, 47, 73, 17, 14, 23, 91, 61, 58, 15, 76, 35, 80, 69, 34, 90, 45, 99, 62, 10, 81, 6, 85, 18, 51, 78, 4, 72, 95, 30, 13, 49, 16, 33, 22, 40, 74, 53, 82, 29, 96, 57, 42, 79, 8, 60, 98, 86, 24, 66, 5, 1, 25, 93, 92, 38, 39, 52, 2, 46, 84, 83, 55, 94, 59, 12, 64, 88, 68, 63, 54, 71, 67, 19, 50, 21, 41, 9, 97, 44, 27, 87, 36, 77, 7, 31, 37, 70), 39173, 64569)
    pareto insert ((s33.dist1, s33.dist2), s33)
    val s34 = new MOSol(Array(92, 43, 28, 65, 38, 3, 56, 0, 6, 20, 58, 19, 77, 42, 5, 17, 14, 23, 91, 85, 73, 15, 59, 35, 60, 69, 11, 90, 45, 99, 41, 10, 12, 8, 26, 18, 94, 78, 29, 72, 47, 88, 51, 49, 16, 33, 22, 13, 89, 81, 82, 36, 9, 63, 76, 74, 86, 53, 98, 34, 57, 66, 30, 1, 25, 93, 39, 68, 80, 52, 2, 46, 84, 83, 48, 4, 44, 95, 64, 55, 24, 32, 54, 71, 67, 61, 50, 21, 79, 96, 97, 62, 27, 87, 75, 40, 7, 31, 37, 70), Array(7, 63, 70, 5, 75, 14, 8, 96, 33, 52, 31, 26, 32, 47, 16, 21, 44, 15, 35, 11, 9, 87, 46, 17, 80, 64, 34, 92, 2, 38, 62, 97, 81, 45, 59, 23, 51, 98, 4, 66, 95, 30, 13, 1, 76, 28, 71, 40, 74, 43, 86, 42, 69, 57, 82, 79, 6, 60, 10, 22, 24, 85, 91, 53, 78, 3, 61, 84, 67, 25, 99, 83, 39, 20, 55, 94, 54, 12, 37, 88, 68, 49, 50, 73, 72, 19, 56, 93, 41, 48, 27, 18, 0, 65, 36, 77, 89, 90, 58, 29), 39513, 64308)
    pareto insert ((s34.dist1, s34.dist2), s34)
    val s35 = new MOSol(Array(27, 63, 28, 5, 38, 62, 56, 0, 19, 20, 90, 26, 77, 42, 16, 21, 44, 15, 35, 61, 10, 87, 46, 17, 60, 69, 34, 92, 45, 99, 41, 58, 12, 6, 59, 23, 94, 78, 29, 72, 47, 88, 51, 1, 91, 33, 71, 13, 89, 43, 82, 36, 96, 49, 76, 74, 8, 53, 98, 86, 57, 85, 30, 81, 25, 3, 39, 68, 80, 52, 2, 83, 84, 14, 48, 4, 22, 95, 64, 55, 24, 32, 54, 73, 67, 11, 50, 93, 79, 9, 97, 18, 66, 65, 75, 40, 7, 31, 37, 70), Array(7, 43, 70, 65, 75, 3, 33, 96, 56, 89, 20, 85, 32, 47, 73, 17, 14, 23, 91, 8, 9, 15, 76, 35, 80, 64, 11, 0, 2, 38, 62, 97, 81, 45, 26, 18, 51, 98, 4, 66, 95, 30, 13, 49, 16, 28, 22, 40, 74, 53, 86, 42, 69, 57, 82, 79, 6, 60, 31, 34, 24, 19, 5, 1, 78, 93, 92, 84, 67, 25, 99, 46, 39, 83, 55, 94, 54, 12, 37, 88, 68, 63, 50, 71, 72, 61, 59, 21, 41, 48, 10, 44, 27, 87, 36, 77, 52, 90, 58, 29), 39842, 63408)
    pareto insert ((s35.dist1, s35.dist2), s35)
    val s36 = new MOSol(Array(7, 63, 28, 5, 38, 88, 33, 96, 56, 20, 31, 8, 77, 42, 73, 21, 14, 15, 35, 26, 71, 87, 44, 17, 60, 64, 34, 92, 75, 99, 62, 97, 12, 45, 11, 23, 51, 98, 67, 66, 47, 30, 54, 1, 16, 70, 61, 13, 89, 43, 86, 29, 69, 49, 82, 79, 6, 53, 10, 76, 57, 85, 91, 81, 55, 3, 68, 84, 80, 25, 2, 46, 39, 83, 48, 94, 22, 95, 37, 74, 24, 32, 50, 93, 72, 19, 59, 78, 41, 9, 27, 18, 0, 65, 36, 40, 52, 90, 58, 4), Array(92, 43, 70, 65, 99, 3, 56, 0, 11, 89, 58, 34, 32, 47, 16, 17, 44, 23, 91, 85, 9, 15, 76, 35, 80, 69, 19, 90, 2, 51, 41, 10, 81, 6, 26, 18, 94, 78, 4, 72, 95, 88, 13, 49, 22, 33, 71, 40, 74, 53, 82, 36, 96, 57, 42, 64, 8, 60, 98, 86, 24, 46, 30, 1, 25, 93, 39, 38, 66, 52, 45, 20, 84, 14, 79, 28, 59, 12, 87, 55, 68, 63, 54, 73, 67, 61, 50, 21, 5, 48, 97, 62, 27, 83, 75, 77, 7, 31, 37, 29), 41945, 60707)
    pareto insert ((s36.dist1, s36.dist2), s36)
    val s37 = new MOSol(Array(97, 63, 70, 5, 38, 62, 56, 0, 19, 20, 90, 26, 77, 42, 16, 21, 44, 15, 35, 61, 58, 87, 46, 17, 60, 69, 34, 92, 2, 99, 41, 10, 12, 6, 59, 23, 29, 78, 67, 68, 47, 88, 51, 1, 91, 33, 71, 13, 89, 43, 82, 36, 96, 49, 76, 74, 8, 53, 98, 86, 57, 85, 30, 81, 25, 3, 39, 84, 80, 52, 45, 83, 94, 14, 48, 28, 22, 95, 64, 55, 24, 32, 54, 73, 72, 11, 50, 93, 79, 9, 27, 18, 66, 65, 75, 40, 7, 31, 37, 4), Array(7, 43, 28, 65, 99, 3, 33, 96, 56, 89, 31, 85, 32, 47, 73, 17, 14, 23, 91, 8, 9, 15, 76, 35, 80, 64, 11, 90, 75, 36, 62, 97, 81, 45, 26, 18, 51, 98, 4, 66, 95, 30, 13, 49, 16, 70, 22, 40, 74, 53, 86, 42, 69, 57, 82, 79, 6, 60, 20, 34, 24, 19, 5, 1, 78, 93, 92, 38, 39, 25, 2, 46, 84, 83, 55, 94, 54, 12, 37, 88, 68, 63, 50, 71, 67, 61, 59, 21, 41, 48, 10, 44, 27, 87, 72, 77, 52, 0, 58, 29), 42967, 58807)
    pareto insert ((s37.dist1, s37.dist2), s37)
    val s38 = new MOSol(Array(89, 63, 28, 5, 38, 88, 33, 0, 24, 20, 92, 26, 77, 42, 73, 21, 14, 15, 35, 11, 71, 87, 54, 17, 60, 69, 34, 96, 75, 99, 62, 97, 12, 8, 59, 23, 4, 98, 29, 66, 47, 30, 51, 1, 16, 2, 22, 13, 74, 43, 86, 36, 9, 49, 82, 64, 6, 53, 31, 76, 57, 85, 91, 81, 25, 3, 61, 80, 39, 52, 45, 46, 84, 83, 79, 94, 44, 95, 37, 55, 68, 32, 50, 93, 67, 19, 56, 78, 41, 48, 10, 18, 27, 65, 72, 40, 7, 90, 58, 70), Array(7, 43, 45, 65, 36, 3, 56, 96, 33, 52, 90, 19, 32, 47, 16, 17, 44, 23, 91, 85, 9, 15, 46, 35, 8, 64, 11, 92, 2, 38, 41, 58, 81, 6, 26, 18, 51, 78, 4, 68, 95, 88, 13, 49, 76, 70, 71, 40, 89, 53, 82, 42, 69, 57, 22, 79, 86, 60, 98, 34, 24, 66, 30, 1, 55, 93, 39, 84, 80, 25, 99, 20, 94, 14, 48, 28, 59, 12, 87, 74, 67, 63, 54, 73, 72, 61, 50, 21, 5, 0, 97, 62, 10, 83, 75, 77, 27, 31, 37, 29), 44401, 57404)
    pareto insert ((s38.dist1, s38.dist2), s38)
    val s39 = new MOSol(Array(7, 43, 28, 5, 38, 62, 33, 96, 56, 20, 90, 26, 32, 47, 16, 21, 44, 15, 35, 8, 71, 87, 46, 17, 60, 69, 34, 92, 75, 99, 41, 58, 81, 11, 59, 23, 4, 78, 29, 66, 95, 88, 13, 91, 76, 2, 80, 40, 89, 51, 82, 36, 9, 49, 42, 74, 6, 53, 98, 86, 57, 85, 30, 1, 25, 3, 61, 68, 39, 52, 45, 83, 84, 14, 48, 94, 22, 12, 64, 55, 24, 63, 54, 73, 67, 19, 50, 93, 79, 0, 97, 18, 10, 65, 72, 77, 27, 31, 37, 70), Array(89, 63, 45, 65, 36, 3, 56, 0, 19, 52, 92, 33, 77, 42, 73, 17, 14, 23, 91, 85, 9, 15, 76, 35, 80, 64, 11, 96, 2, 38, 62, 97, 12, 6, 26, 18, 51, 98, 4, 68, 47, 30, 54, 1, 16, 70, 22, 13, 74, 53, 86, 49, 69, 57, 82, 79, 8, 60, 31, 34, 24, 66, 5, 81, 78, 93, 39, 84, 67, 25, 99, 20, 94, 83, 55, 28, 44, 95, 37, 88, 46, 32, 50, 71, 72, 61, 59, 21, 41, 48, 10, 43, 27, 87, 75, 40, 7, 90, 58, 29), 44861, 57350)
    pareto insert ((s39.dist1, s39.dist2), s39)

  }

  def insertScull3() {
    val s40 = new MOSol(Array(89, 63, 28, 5, 38, 14, 33, 0, 24, 20, 92, 26, 77, 42, 16, 21, 44, 15, 35, 11, 37, 87, 76, 17, 60, 69, 34, 96, 75, 99, 62, 97, 12, 8, 59, 23, 4, 98, 29, 66, 47, 30, 51, 1, 22, 2, 78, 13, 74, 43, 86, 36, 9, 49, 82, 79, 6, 53, 31, 73, 57, 85, 91, 81, 25, 3, 61, 80, 39, 52, 45, 46, 84, 83, 55, 94, 54, 95, 64, 88, 68, 32, 50, 71, 67, 19, 56, 93, 41, 48, 10, 18, 27, 65, 72, 40, 7, 90, 58, 70), Array(7, 43, 45, 65, 36, 3, 56, 96, 33, 52, 90, 19, 32, 47, 5, 17, 14, 23, 91, 85, 9, 15, 44, 35, 8, 64, 11, 92, 2, 38, 41, 58, 81, 6, 26, 18, 51, 20, 4, 68, 95, 88, 13, 49, 16, 70, 71, 40, 89, 53, 82, 42, 69, 57, 76, 74, 86, 60, 98, 34, 24, 66, 30, 1, 78, 93, 39, 84, 80, 25, 99, 83, 94, 59, 48, 28, 22, 12, 46, 55, 67, 63, 54, 73, 72, 61, 50, 21, 79, 0, 97, 62, 10, 87, 75, 77, 27, 31, 37, 29), 44987, 56362)
    pareto insert ((s40.dist1, s40.dist2), s40)
    val s41 = new MOSol(Array(7, 63, 28, 88, 38, 62, 33, 96, 24, 20, 31, 26, 77, 82, 5, 21, 14, 15, 35, 11, 71, 87, 76, 17, 60, 55, 34, 92, 75, 99, 50, 97, 12, 8, 59, 23, 4, 78, 29, 68, 47, 30, 51, 1, 16, 2, 22, 13, 89, 43, 86, 36, 9, 49, 42, 79, 6, 53, 10, 73, 57, 85, 91, 81, 25, 3, 69, 84, 80, 52, 45, 46, 39, 83, 48, 94, 44, 95, 64, 74, 61, 32, 54, 37, 72, 19, 56, 93, 41, 0, 27, 18, 66, 65, 67, 40, 98, 90, 58, 70), Array(89, 43, 45, 65, 36, 14, 56, 0, 33, 52, 58, 19, 32, 47, 16, 17, 44, 23, 91, 85, 9, 15, 46, 35, 8, 64, 11, 90, 2, 38, 41, 10, 81, 6, 26, 18, 51, 83, 4, 72, 95, 88, 54, 49, 76, 70, 71, 40, 74, 53, 30, 42, 69, 57, 82, 25, 86, 60, 98, 34, 24, 80, 5, 1, 78, 93, 92, 94, 39, 66, 99, 20, 84, 59, 79, 28, 22, 12, 37, 55, 68, 63, 13, 73, 67, 61, 50, 21, 3, 48, 97, 62, 27, 87, 75, 77, 7, 31, 96, 29), 46180, 56253)
    pareto insert ((s41.dist1, s41.dist2), s41)
    val s42 = new MOSol(Array(7, 43, 70, 65, 38, 3, 57, 96, 11, 52, 90, 26, 32, 47, 73, 17, 14, 23, 91, 8, 9, 15, 76, 35, 80, 64, 34, 92, 2, 99, 62, 58, 81, 56, 59, 18, 29, 78, 67, 66, 95, 30, 51, 49, 16, 33, 22, 40, 89, 53, 82, 36, 69, 88, 42, 79, 6, 60, 98, 86, 24, 85, 5, 1, 55, 93, 61, 84, 39, 25, 45, 20, 94, 83, 48, 28, 54, 12, 46, 74, 68, 63, 13, 71, 72, 19, 50, 21, 41, 0, 97, 44, 10, 87, 75, 77, 27, 31, 37, 4), Array(89, 63, 28, 5, 99, 62, 56, 0, 19, 20, 92, 8, 77, 82, 16, 21, 44, 15, 35, 85, 71, 87, 46, 17, 60, 69, 11, 96, 75, 36, 41, 97, 12, 45, 26, 23, 51, 98, 4, 68, 47, 88, 54, 1, 91, 70, 78, 13, 74, 43, 86, 42, 9, 49, 76, 64, 33, 6, 31, 34, 57, 66, 30, 81, 25, 3, 39, 38, 80, 52, 2, 83, 84, 14, 79, 94, 22, 95, 37, 55, 24, 32, 50, 73, 67, 61, 59, 93, 53, 48, 10, 18, 27, 65, 72, 40, 7, 90, 58, 29), 47349, 53584)
    pareto insert ((s42.dist1, s42.dist2), s42)
    val s43 = new MOSol(Array(89, 43, 70, 65, 38, 3, 56, 0, 26, 52, 58, 19, 32, 47, 73, 17, 14, 23, 91, 85, 9, 15, 76, 35, 8, 64, 34, 90, 2, 99, 62, 10, 81, 6, 11, 18, 29, 48, 67, 66, 95, 30, 51, 49, 16, 33, 22, 40, 74, 53, 82, 36, 69, 57, 42, 79, 59, 60, 98, 86, 24, 80, 5, 1, 78, 93, 92, 84, 39, 25, 45, 46, 94, 83, 55, 28, 54, 12, 37, 88, 68, 63, 13, 71, 72, 61, 50, 21, 41, 20, 97, 44, 27, 87, 75, 77, 7, 31, 96, 4), Array(7, 63, 28, 5, 99, 62, 33, 96, 24, 20, 31, 34, 77, 82, 16, 21, 44, 15, 35, 11, 89, 87, 46, 17, 60, 69, 8, 92, 75, 36, 41, 97, 12, 45, 26, 23, 51, 78, 4, 68, 47, 88, 54, 1, 91, 70, 71, 13, 37, 43, 86, 42, 9, 49, 76, 74, 6, 53, 10, 56, 57, 85, 30, 81, 25, 3, 39, 38, 80, 52, 2, 83, 84, 14, 48, 94, 22, 95, 64, 55, 61, 32, 50, 73, 67, 19, 59, 93, 79, 0, 27, 18, 66, 65, 72, 40, 98, 90, 58, 29), 47412, 53543)
    pareto insert ((s43.dist1, s43.dist2), s43)
    val s44 = new MOSol(Array(89, 43, 28, 5, 38, 14, 56, 0, 24, 52, 58, 97, 32, 47, 16, 21, 44, 15, 35, 8, 9, 87, 46, 17, 60, 64, 11, 92, 75, 99, 62, 90, 81, 45, 26, 23, 51, 48, 67, 66, 95, 30, 13, 49, 76, 70, 71, 40, 74, 53, 82, 29, 69, 57, 42, 79, 33, 6, 98, 86, 34, 85, 91, 1, 78, 3, 68, 84, 80, 25, 2, 83, 39, 59, 55, 94, 22, 12, 37, 88, 61, 63, 54, 73, 72, 19, 50, 93, 41, 20, 27, 18, 10, 65, 36, 77, 7, 31, 96, 4), Array(7, 63, 70, 65, 99, 3, 57, 96, 19, 20, 92, 26, 77, 42, 5, 17, 14, 23, 91, 85, 89, 15, 76, 35, 8, 69, 34, 90, 2, 51, 41, 97, 12, 56, 60, 18, 94, 78, 4, 72, 47, 88, 54, 1, 16, 33, 22, 13, 37, 43, 86, 36, 9, 49, 82, 74, 6, 53, 10, 73, 24, 80, 30, 81, 25, 93, 39, 38, 66, 52, 45, 46, 84, 83, 48, 28, 44, 95, 64, 55, 68, 32, 50, 71, 67, 61, 59, 21, 79, 0, 31, 62, 27, 87, 75, 40, 98, 11, 58, 29), 49035, 51809)
    pareto insert ((s44.dist1, s44.dist2), s44)
    val s45 = new MOSol(Array(89, 63, 28, 65, 99, 3, 33, 0, 56, 20, 92, 19, 77, 42, 5, 17, 14, 23, 91, 85, 10, 15, 76, 35, 8, 64, 11, 90, 75, 36, 41, 58, 12, 45, 26, 18, 51, 69, 4, 68, 47, 88, 54, 1, 16, 70, 22, 13, 74, 43, 86, 49, 9, 57, 82, 25, 6, 60, 98, 73, 34, 66, 30, 81, 78, 93, 39, 38, 80, 52, 2, 37, 84, 83, 79, 94, 44, 95, 46, 55, 24, 32, 50, 71, 67, 61, 59, 21, 53, 48, 97, 62, 27, 87, 72, 40, 7, 31, 96, 29), Array(7, 43, 70, 5, 38, 14, 56, 96, 24, 52, 20, 26, 32, 47, 16, 21, 44, 15, 35, 11, 9, 87, 46, 17, 80, 55, 34, 92, 2, 99, 62, 97, 81, 6, 60, 23, 29, 71, 67, 66, 95, 30, 13, 49, 76, 33, 78, 40, 89, 51, 82, 36, 69, 88, 42, 79, 8, 53, 31, 86, 57, 85, 91, 1, 25, 3, 61, 84, 39, 37, 45, 83, 94, 59, 48, 28, 22, 12, 64, 74, 68, 63, 54, 73, 72, 19, 50, 93, 41, 0, 27, 18, 10, 65, 75, 77, 98, 90, 58, 4), 49493, 51140)
    pareto insert ((s45.dist1, s45.dist2), s45)
    val s46 = new MOSol(Array(7, 43, 28, 5, 99, 14, 33, 96, 56, 52, 20, 26, 32, 47, 73, 21, 35, 15, 91, 11, 9, 87, 46, 17, 8, 55, 34, 92, 75, 36, 62, 97, 81, 45, 60, 23, 51, 71, 4, 66, 95, 30, 13, 49, 16, 70, 80, 40, 89, 53, 82, 42, 69, 57, 76, 79, 6, 88, 31, 86, 24, 85, 18, 1, 25, 3, 61, 38, 39, 37, 2, 83, 84, 59, 48, 94, 22, 12, 64, 74, 68, 63, 54, 93, 67, 19, 50, 78, 41, 0, 27, 44, 10, 65, 72, 77, 98, 90, 58, 29), Array(89, 63, 70, 65, 38, 3, 56, 0, 24, 20, 92, 19, 77, 42, 5, 17, 44, 23, 62, 85, 10, 15, 76, 35, 60, 64, 11, 90, 2, 99, 41, 58, 12, 6, 26, 16, 29, 69, 67, 68, 47, 88, 51, 1, 91, 33, 22, 13, 74, 43, 86, 36, 9, 49, 82, 25, 8, 53, 98, 73, 34, 66, 30, 81, 78, 93, 39, 84, 80, 52, 45, 37, 94, 14, 79, 28, 54, 95, 87, 55, 46, 32, 50, 71, 72, 61, 59, 21, 57, 48, 97, 18, 27, 83, 75, 40, 7, 31, 96, 4), 51741, 49010)
    pareto insert ((s46.dist1, s46.dist2), s46)
    val s47 = new MOSol(Array(89, 43, 28, 65, 38, 3, 33, 0, 19, 20, 92, 26, 32, 40, 5, 21, 14, 15, 35, 85, 10, 87, 76, 17, 8, 69, 34, 90, 75, 99, 62, 58, 81, 45, 60, 23, 51, 71, 67, 68, 95, 30, 54, 49, 16, 70, 22, 13, 37, 53, 47, 42, 9, 57, 82, 25, 6, 88, 98, 86, 24, 66, 91, 1, 74, 93, 39, 72, 80, 52, 11, 46, 84, 59, 79, 94, 44, 12, 64, 55, 29, 63, 50, 73, 2, 61, 56, 78, 41, 48, 97, 18, 27, 83, 36, 77, 7, 31, 96, 4), Array(7, 63, 84, 5, 99, 14, 56, 96, 24, 52, 20, 70, 77, 47, 16, 17, 44, 23, 91, 8, 9, 15, 46, 35, 60, 55, 11, 92, 2, 80, 41, 97, 12, 6, 26, 18, 94, 48, 4, 66, 13, 88, 51, 1, 76, 33, 71, 50, 89, 43, 82, 36, 69, 49, 42, 79, 86, 53, 31, 73, 34, 85, 30, 81, 78, 3, 61, 38, 39, 25, 45, 37, 67, 83, 64, 28, 22, 95, 87, 74, 68, 32, 54, 93, 72, 19, 59, 21, 57, 0, 27, 62, 10, 65, 75, 40, 98, 90, 58, 29), 53335, 47779)
    pareto insert ((s47.dist1, s47.dist2), s47)
    val s48 = new MOSol(Array(7, 81, 70, 5, 99, 14, 56, 96, 24, 52, 20, 19, 77, 47, 16, 21, 44, 15, 35, 85, 9, 87, 54, 17, 60, 55, 11, 92, 2, 36, 62, 97, 12, 6, 26, 23, 51, 48, 4, 38, 95, 30, 13, 49, 76, 33, 80, 50, 89, 53, 63, 42, 69, 57, 82, 79, 8, 88, 31, 73, 34, 66, 91, 1, 78, 3, 39, 84, 67, 25, 45, 37, 94, 83, 64, 28, 22, 40, 46, 74, 68, 32, 86, 71, 72, 61, 59, 93, 41, 0, 27, 18, 10, 65, 75, 43, 98, 90, 58, 29), Array(89, 63, 28, 65, 38, 3, 33, 0, 56, 20, 92, 26, 32, 42, 5, 17, 14, 23, 91, 11, 10, 15, 76, 35, 8, 69, 34, 90, 75, 99, 41, 58, 81, 45, 60, 18, 29, 71, 39, 66, 77, 88, 51, 95, 16, 70, 78, 13, 37, 43, 47, 36, 9, 49, 22, 25, 6, 53, 98, 86, 24, 85, 30, 50, 74, 93, 61, 68, 80, 52, 2, 83, 84, 59, 79, 94, 44, 12, 64, 55, 46, 1, 54, 73, 67, 19, 82, 21, 57, 48, 97, 62, 27, 87, 72, 40, 7, 31, 96, 4), 55419, 46079)
    pareto insert ((s48.dist1, s48.dist2), s48)
    val s49 = new MOSol(Array(89, 43, 70, 5, 38, 14, 57, 0, 24, 52, 58, 97, 32, 47, 50, 21, 35, 15, 91, 8, 9, 87, 76, 17, 60, 64, 11, 92, 2, 99, 62, 90, 81, 56, 26, 23, 29, 20, 67, 68, 95, 30, 13, 49, 16, 33, 22, 40, 74, 51, 82, 36, 69, 88, 42, 25, 6, 53, 98, 73, 34, 85, 18, 1, 78, 3, 39, 84, 80, 66, 45, 37, 94, 83, 79, 28, 54, 12, 46, 55, 61, 63, 86, 71, 72, 19, 59, 93, 41, 48, 27, 44, 10, 65, 75, 77, 7, 31, 96, 4), Array(7, 63, 28, 65, 99, 3, 56, 96, 19, 20, 92, 26, 77, 42, 5, 17, 44, 23, 62, 85, 37, 15, 46, 35, 8, 55, 34, 90, 75, 36, 41, 97, 12, 45, 60, 16, 51, 71, 4, 66, 47, 88, 54, 1, 91, 70, 78, 13, 89, 43, 14, 49, 9, 57, 76, 79, 33, 6, 10, 86, 24, 80, 30, 81, 25, 93, 69, 38, 39, 52, 2, 83, 84, 59, 48, 94, 22, 95, 64, 74, 68, 32, 50, 73, 67, 61, 82, 21, 53, 0, 31, 18, 27, 87, 72, 40, 98, 11, 58, 29), 55463, 45880)
    pareto insert ((s49.dist1, s49.dist2), s49)
    val s50 = new MOSol(Array(89, 63, 70, 5, 99, 14, 56, 0, 24, 20, 92, 19, 77, 82, 50, 21, 91, 15, 35, 85, 10, 87, 76, 17, 60, 64, 11, 90, 2, 36, 41, 58, 12, 6, 26, 23, 51, 69, 4, 38, 47, 88, 54, 1, 16, 33, 80, 13, 74, 43, 62, 42, 9, 49, 22, 25, 8, 53, 98, 73, 34, 66, 30, 81, 78, 3, 39, 84, 67, 52, 45, 37, 94, 83, 79, 28, 44, 95, 46, 55, 68, 32, 86, 71, 72, 61, 59, 93, 57, 48, 97, 18, 27, 65, 75, 40, 7, 31, 96, 29), Array(7, 43, 28, 65, 38, 3, 33, 96, 56, 52, 20, 26, 32, 47, 5, 17, 44, 23, 91, 11, 9, 15, 54, 35, 8, 55, 34, 92, 75, 99, 62, 97, 81, 45, 60, 18, 29, 71, 39, 66, 95, 30, 51, 49, 76, 70, 78, 40, 89, 53, 14, 36, 69, 57, 42, 79, 6, 88, 31, 86, 24, 85, 50, 1, 25, 93, 61, 68, 80, 37, 2, 83, 84, 59, 48, 94, 22, 12, 64, 74, 46, 63, 13, 73, 67, 19, 82, 21, 41, 0, 27, 16, 10, 87, 72, 77, 98, 90, 58, 4), 56266, 45224)
    pareto insert ((s50.dist1, s50.dist2), s50)
    val s51 = new MOSol(Array(89, 43, 70, 5, 99, 14, 57, 0, 24, 20, 92, 19, 32, 82, 16, 21, 44, 15, 35, 85, 10, 87, 46, 17, 60, 69, 11, 90, 2, 36, 62, 58, 81, 8, 26, 23, 51, 71, 4, 38, 77, 30, 54, 95, 76, 33, 80, 13, 37, 1, 47, 42, 9, 88, 49, 25, 6, 53, 98, 56, 34, 66, 91, 50, 74, 3, 39, 84, 67, 52, 45, 83, 94, 93, 79, 28, 22, 12, 64, 55, 68, 63, 86, 73, 72, 61, 59, 78, 41, 48, 97, 18, 27, 65, 75, 40, 7, 31, 96, 29), Array(7, 49, 28, 65, 38, 3, 56, 96, 33, 52, 20, 26, 77, 47, 5, 17, 14, 23, 91, 11, 9, 15, 76, 35, 8, 55, 34, 92, 75, 99, 41, 97, 12, 45, 60, 18, 29, 48, 39, 66, 95, 88, 51, 1, 16, 70, 22, 50, 89, 54, 63, 36, 69, 57, 42, 79, 59, 6, 31, 86, 24, 85, 30, 81, 78, 93, 61, 68, 80, 25, 2, 37, 84, 83, 64, 94, 44, 40, 87, 74, 46, 32, 13, 71, 67, 19, 82, 21, 53, 0, 27, 62, 10, 73, 72, 43, 98, 90, 58, 4), 57011, 44782)
    pareto insert ((s51.dist1, s51.dist2), s51)
    val s52 = new MOSol(Array(7, 81, 70, 5, 99, 14, 57, 96, 19, 52, 20, 26, 77, 82, 50, 87, 35, 15, 91, 85, 89, 18, 76, 17, 8, 55, 34, 90, 2, 36, 41, 97, 12, 56, 60, 23, 94, 48, 4, 38, 47, 88, 54, 40, 16, 33, 80, 13, 9, 51, 63, 42, 69, 49, 22, 79, 6, 53, 31, 73, 24, 66, 30, 1, 78, 3, 39, 84, 67, 25, 45, 37, 92, 93, 64, 28, 44, 95, 46, 74, 68, 32, 86, 71, 72, 61, 59, 21, 65, 0, 10, 62, 27, 83, 75, 43, 98, 11, 58, 29), Array(89, 63, 28, 65, 38, 3, 56, 0, 24, 48, 90, 97, 32, 47, 5, 17, 44, 23, 21, 8, 10, 87, 54, 35, 60, 69, 11, 92, 75, 99, 62, 58, 81, 45, 26, 16, 29, 71, 39, 66, 43, 30, 51, 95, 76, 70, 78, 40, 37, 53, 14, 49, 9, 57, 42, 25, 33, 6, 98, 86, 34, 85, 91, 50, 74, 88, 61, 68, 80, 52, 2, 83, 84, 59, 79, 94, 22, 12, 64, 55, 46, 1, 13, 93, 67, 19, 82, 15, 41, 20, 27, 18, 72, 73, 36, 77, 7, 31, 96, 4), 60952, 42685)
    pareto insert ((s52.dist1, s52.dist2), s52)
    val s53 = new MOSol(Array(7, 49, 70, 65, 99, 3, 57, 96, 19, 20, 92, 26, 32, 47, 5, 21, 35, 23, 17, 85, 89, 87, 76, 15, 8, 69, 34, 90, 2, 36, 62, 97, 81, 56, 60, 91, 51, 48, 4, 38, 43, 30, 54, 95, 16, 33, 80, 40, 74, 53, 14, 42, 9, 88, 22, 25, 6, 59, 10, 86, 24, 66, 50, 1, 78, 93, 39, 84, 67, 52, 45, 37, 94, 83, 79, 28, 44, 12, 46, 55, 68, 63, 13, 71, 72, 61, 82, 64, 41, 0, 31, 18, 27, 73, 75, 77, 98, 11, 58, 29), Array(89, 63, 28, 5, 38, 14, 56, 0, 24, 52, 58, 97, 77, 82, 50, 23, 44, 18, 91, 8, 9, 15, 54, 17, 60, 55, 11, 92, 75, 99, 41, 90, 12, 45, 26, 16, 29, 71, 39, 66, 47, 88, 51, 40, 76, 70, 78, 13, 37, 1, 62, 36, 69, 49, 42, 79, 33, 6, 98, 57, 34, 85, 30, 81, 87, 3, 61, 68, 80, 25, 2, 83, 84, 93, 48, 94, 22, 95, 64, 74, 46, 32, 86, 73, 67, 19, 59, 21, 53, 20, 27, 35, 10, 65, 72, 43, 7, 31, 96, 4), 61141, 41673)
    pareto insert ((s53.dist1, s53.dist2), s53)
    val s54 = new MOSol(Array(89, 49, 28, 65, 99, 3, 57, 0, 24, 20, 92, 19, 32, 47, 5, 21, 35, 15, 91, 85, 10, 87, 76, 17, 60, 69, 11, 90, 75, 36, 62, 58, 81, 8, 26, 23, 51, 71, 4, 38, 77, 30, 82, 95, 16, 33, 80, 50, 37, 54, 14, 42, 9, 88, 22, 25, 6, 53, 98, 86, 34, 66, 18, 1, 79, 93, 39, 72, 67, 52, 45, 46, 84, 59, 55, 94, 44, 12, 64, 74, 68, 63, 13, 73, 2, 61, 56, 78, 41, 48, 97, 43, 27, 83, 70, 40, 7, 31, 96, 29), Array(7, 63, 84, 5, 38, 14, 56, 96, 33, 52, 20, 26, 77, 82, 50, 17, 44, 23, 62, 11, 9, 15, 54, 35, 8, 55, 34, 92, 2, 99, 41, 97, 12, 45, 60, 16, 29, 48, 39, 66, 95, 88, 51, 91, 76, 70, 71, 13, 89, 1, 47, 36, 69, 57, 49, 74, 86, 6, 31, 73, 24, 85, 30, 81, 78, 3, 61, 68, 80, 25, 94, 37, 67, 83, 79, 28, 22, 40, 87, 64, 46, 32, 42, 93, 72, 19, 59, 21, 53, 0, 27, 18, 10, 65, 75, 43, 98, 90, 58, 4), 61841, 41530)
    pareto insert ((s54.dist1, s54.dist2), s54)
    val s55 = new MOSol(Array(89, 63, 84, 65, 99, 3, 56, 96, 19, 52, 90, 26, 77, 42, 5, 87, 35, 15, 91, 85, 37, 18, 76, 17, 8, 55, 34, 7, 2, 36, 41, 97, 12, 45, 60, 23, 51, 71, 4, 38, 47, 88, 54, 40, 16, 70, 78, 50, 9, 1, 14, 49, 69, 57, 22, 79, 33, 6, 31, 86, 24, 80, 30, 81, 25, 93, 39, 94, 67, 66, 11, 46, 92, 59, 48, 28, 44, 95, 64, 74, 68, 32, 13, 73, 72, 61, 82, 21, 53, 20, 27, 62, 10, 83, 75, 43, 98, 0, 58, 29), Array(97, 49, 28, 5, 38, 14, 57, 27, 24, 48, 92, 70, 32, 82, 50, 17, 44, 23, 21, 8, 89, 87, 54, 35, 60, 64, 11, 90, 75, 99, 62, 58, 81, 56, 26, 16, 29, 20, 39, 66, 43, 30, 13, 95, 76, 33, 71, 40, 74, 51, 47, 36, 9, 88, 42, 25, 6, 53, 98, 73, 34, 85, 91, 1, 78, 3, 69, 68, 80, 52, 45, 37, 84, 83, 79, 94, 22, 12, 46, 55, 61, 63, 86, 93, 2, 19, 59, 15, 41, 0, 10, 18, 72, 65, 67, 77, 7, 31, 96, 4), 63113, 40472)
    pareto insert ((s55.dist1, s55.dist2), s55)
    val s56 = new MOSol(Array(89, 49, 84, 65, 99, 3, 56, 96, 19, 52, 90, 26, 77, 47, 5, 17, 14, 23, 91, 85, 37, 15, 87, 35, 8, 55, 34, 7, 2, 36, 41, 97, 12, 45, 60, 18, 51, 71, 4, 38, 95, 88, 54, 1, 16, 70, 78, 50, 9, 53, 62, 42, 69, 57, 76, 79, 33, 6, 31, 86, 24, 80, 30, 81, 25, 93, 39, 94, 67, 66, 11, 46, 92, 59, 48, 28, 22, 40, 64, 74, 68, 32, 13, 73, 72, 61, 82, 21, 63, 20, 27, 44, 10, 83, 75, 43, 98, 0, 58, 29), Array(97, 43, 28, 5, 38, 14, 57, 27, 24, 48, 92, 70, 32, 82, 16, 21, 44, 15, 35, 8, 89, 87, 76, 17, 60, 64, 11, 90, 75, 99, 62, 58, 81, 56, 26, 23, 29, 20, 39, 66, 77, 30, 51, 95, 91, 33, 71, 13, 74, 1, 47, 36, 9, 49, 42, 25, 6, 53, 98, 73, 34, 85, 50, 88, 78, 3, 69, 68, 80, 52, 45, 37, 84, 83, 79, 94, 54, 12, 46, 55, 61, 63, 86, 93, 2, 19, 59, 22, 41, 0, 10, 18, 72, 65, 67, 40, 7, 31, 96, 4), 64447, 39566)
    pareto insert ((s56.dist1, s56.dist2), s56)
    val s57 = new MOSol(Array(89, 63, 84, 65, 38, 3, 57, 96, 24, 52, 90, 70, 77, 42, 5, 17, 44, 23, 91, 8, 37, 15, 87, 35, 60, 55, 11, 7, 2, 99, 62, 97, 12, 56, 26, 18, 29, 71, 67, 68, 47, 30, 51, 1, 76, 33, 78, 50, 9, 88, 14, 36, 69, 49, 22, 79, 6, 53, 31, 86, 34, 85, 16, 81, 25, 93, 39, 94, 80, 66, 45, 46, 92, 59, 48, 28, 54, 95, 64, 74, 61, 32, 13, 73, 72, 19, 82, 21, 41, 20, 27, 43, 10, 83, 75, 40, 98, 0, 58, 4), Array(97, 43, 28, 5, 99, 14, 56, 27, 19, 48, 92, 26, 32, 82, 50, 21, 62, 15, 35, 85, 89, 87, 54, 17, 8, 64, 34, 90, 75, 36, 41, 58, 81, 45, 60, 23, 51, 20, 4, 66, 95, 88, 13, 91, 16, 70, 71, 40, 74, 53, 47, 42, 9, 57, 76, 25, 33, 6, 98, 73, 24, 80, 30, 1, 78, 3, 69, 38, 39, 52, 11, 37, 84, 83, 79, 94, 44, 12, 46, 55, 68, 63, 86, 93, 2, 61, 59, 22, 49, 0, 10, 18, 72, 65, 67, 77, 7, 31, 96, 29), 65224, 39002)
    pareto insert ((s57.dist1, s57.dist2), s57)
    val s58 = new MOSol(Array(89, 63, 84, 65, 99, 3, 56, 96, 19, 52, 90, 26, 77, 47, 5, 21, 14, 15, 35, 85, 37, 87, 76, 17, 8, 55, 34, 7, 2, 36, 41, 97, 12, 45, 60, 23, 51, 71, 4, 38, 95, 88, 54, 91, 16, 70, 78, 50, 9, 1, 62, 42, 69, 57, 49, 79, 33, 6, 31, 86, 24, 80, 30, 81, 25, 93, 39, 94, 67, 66, 11, 46, 92, 59, 48, 28, 44, 40, 64, 74, 68, 32, 13, 73, 72, 61, 82, 22, 53, 20, 27, 18, 10, 83, 75, 43, 98, 0, 58, 29), Array(97, 49, 28, 5, 38, 14, 57, 27, 24, 48, 92, 70, 32, 82, 16, 17, 44, 23, 91, 8, 89, 15, 87, 35, 60, 64, 11, 90, 75, 99, 62, 58, 81, 56, 26, 18, 29, 20, 39, 66, 77, 30, 51, 95, 76, 33, 71, 13, 74, 54, 47, 36, 9, 88, 42, 25, 6, 53, 98, 73, 34, 85, 50, 1, 78, 3, 69, 68, 80, 52, 45, 37, 84, 83, 79, 94, 22, 12, 46, 55, 61, 63, 86, 93, 2, 19, 59, 21, 41, 0, 10, 43, 72, 65, 67, 40, 7, 31, 96, 4), 65397, 38791)
    pareto insert ((s58.dist1, s58.dist2), s58)
    val s59 = new MOSol(Array(92, 63, 84, 65, 99, 3, 56, 96, 33, 20, 90, 26, 77, 47, 5, 21, 62, 15, 35, 29, 89, 87, 76, 17, 8, 64, 34, 7, 2, 36, 41, 97, 12, 45, 60, 23, 51, 48, 4, 66, 95, 88, 54, 91, 16, 70, 80, 50, 74, 1, 14, 42, 9, 57, 49, 25, 59, 6, 31, 86, 24, 85, 30, 81, 78, 93, 69, 38, 39, 52, 94, 37, 67, 83, 79, 28, 44, 40, 46, 55, 68, 32, 13, 71, 72, 19, 82, 22, 53, 0, 27, 18, 10, 73, 75, 43, 98, 11, 58, 61), Array(89, 49, 28, 5, 38, 14, 57, 27, 24, 52, 92, 97, 32, 82, 50, 17, 44, 23, 91, 85, 9, 15, 87, 35, 60, 55, 11, 90, 75, 19, 62, 58, 81, 8, 26, 18, 29, 71, 67, 68, 77, 30, 51, 95, 76, 33, 78, 13, 37, 54, 47, 36, 69, 88, 42, 79, 6, 53, 98, 56, 34, 99, 16, 1, 25, 3, 39, 72, 80, 66, 45, 83, 84, 93, 48, 94, 22, 12, 64, 74, 46, 63, 86, 73, 2, 61, 59, 21, 41, 20, 10, 43, 0, 65, 70, 40, 7, 31, 96, 4), 66804, 38201)
    pareto insert ((s59.dist1, s59.dist2), s59)
  }

  def insertScull4() {
    val s60 = new MOSol(Array(97, 63, 28, 65, 99, 3, 57, 90, 45, 52, 9, 26, 77, 42, 5, 21, 44, 15, 35, 85, 89, 87, 76, 17, 8, 55, 34, 92, 75, 19, 62, 58, 12, 56, 60, 23, 53, 20, 4, 38, 47, 30, 51, 40, 91, 33, 78, 50, 37, 1, 14, 36, 69, 88, 49, 79, 6, 59, 98, 86, 24, 80, 16, 81, 25, 93, 39, 72, 67, 66, 11, 46, 84, 83, 48, 94, 54, 95, 64, 74, 68, 32, 13, 71, 2, 61, 82, 22, 41, 0, 27, 18, 10, 73, 70, 43, 7, 31, 96, 29), Array(89, 49, 84, 5, 38, 14, 56, 96, 24, 10, 92, 70, 32, 82, 50, 17, 62, 23, 91, 29, 37, 15, 87, 35, 60, 64, 11, 90, 2, 99, 41, 97, 81, 45, 26, 18, 51, 48, 39, 66, 43, 88, 13, 95, 16, 8, 71, 40, 74, 54, 47, 42, 9, 36, 76, 25, 33, 6, 31, 57, 34, 85, 30, 1, 78, 3, 69, 68, 80, 52, 94, 83, 67, 93, 79, 28, 22, 12, 46, 55, 61, 63, 86, 73, 72, 19, 59, 21, 53, 20, 7, 44, 27, 65, 75, 77, 98, 0, 58, 4), 67764, 38283)
    pareto insert ((s60.dist1, s60.dist2), s60)
    val s61 = new MOSol(Array(89, 49, 84, 65, 99, 3, 56, 96, 19, 52, 90, 26, 32, 47, 5, 17, 35, 23, 91, 85, 37, 87, 54, 21, 8, 55, 34, 7, 2, 36, 62, 97, 81, 45, 60, 18, 51, 71, 4, 38, 77, 30, 82, 95, 16, 70, 78, 50, 9, 53, 14, 42, 69, 57, 76, 79, 33, 6, 31, 86, 24, 80, 15, 1, 25, 93, 39, 94, 67, 66, 11, 46, 92, 59, 48, 28, 44, 12, 64, 74, 68, 63, 13, 73, 72, 61, 88, 22, 41, 20, 27, 43, 10, 83, 75, 40, 98, 0, 58, 29), Array(97, 63, 28, 5, 38, 14, 57, 27, 24, 48, 92, 70, 77, 82, 50, 62, 44, 15, 35, 8, 89, 23, 87, 17, 60, 64, 11, 90, 75, 99, 41, 58, 12, 56, 26, 16, 29, 20, 39, 66, 95, 88, 51, 91, 76, 33, 71, 13, 74, 1, 47, 36, 9, 49, 22, 25, 6, 53, 98, 73, 34, 85, 30, 81, 78, 3, 69, 68, 80, 52, 45, 37, 84, 83, 79, 94, 54, 40, 46, 55, 61, 32, 42, 93, 2, 19, 59, 21, 86, 0, 10, 18, 72, 65, 67, 43, 7, 31, 96, 4), 68539, 37085)
    pareto insert ((s61.dist1, s61.dist2), s61)
    val s62 = new MOSol(Array(97, 63, 28, 65, 99, 3, 57, 90, 45, 52, 9, 26, 77, 82, 5, 21, 44, 15, 35, 85, 89, 87, 76, 17, 8, 55, 34, 92, 75, 19, 62, 58, 12, 56, 60, 23, 51, 20, 4, 38, 47, 30, 13, 40, 91, 33, 78, 50, 37, 1, 14, 42, 69, 36, 49, 79, 6, 53, 98, 73, 24, 80, 16, 81, 25, 93, 39, 72, 67, 66, 11, 46, 84, 88, 48, 94, 54, 95, 64, 74, 68, 32, 86, 71, 2, 61, 59, 22, 41, 0, 27, 18, 10, 83, 70, 43, 7, 31, 96, 29), Array(89, 49, 84, 5, 38, 14, 56, 96, 24, 10, 92, 70, 32, 42, 50, 17, 62, 23, 91, 29, 37, 15, 87, 35, 60, 64, 11, 90, 2, 99, 41, 97, 81, 45, 26, 18, 53, 48, 39, 66, 43, 88, 51, 95, 16, 8, 71, 40, 74, 54, 47, 36, 9, 57, 76, 25, 33, 6, 31, 86, 34, 85, 30, 1, 78, 3, 69, 68, 80, 52, 94, 83, 67, 59, 79, 28, 22, 12, 46, 55, 61, 63, 13, 93, 72, 19, 82, 21, 73, 20, 7, 44, 27, 65, 75, 77, 98, 0, 58, 4), 68728, 37651)
    pareto insert ((s62.dist1, s62.dist2), s62)
    val s63 = new MOSol(Array(89, 12, 28, 65, 38, 3, 57, 96, 45, 20, 92, 26, 77, 47, 5, 21, 35, 15, 44, 85, 10, 87, 76, 17, 8, 64, 34, 90, 75, 99, 62, 97, 81, 56, 60, 23, 29, 71, 39, 66, 95, 30, 51, 91, 16, 33, 80, 32, 74, 88, 14, 36, 9, 49, 42, 25, 6, 53, 31, 86, 24, 19, 50, 1, 78, 93, 69, 72, 61, 52, 11, 46, 84, 59, 79, 94, 54, 40, 37, 55, 68, 63, 13, 73, 2, 67, 82, 22, 41, 48, 7, 18, 27, 83, 70, 43, 98, 0, 58, 4), Array(97, 63, 84, 5, 99, 14, 56, 90, 24, 52, 20, 70, 1, 82, 50, 17, 44, 23, 91, 61, 9, 15, 87, 35, 60, 55, 11, 92, 2, 36, 41, 58, 47, 45, 26, 16, 51, 78, 4, 38, 77, 88, 54, 95, 18, 8, 71, 13, 89, 53, 62, 42, 69, 57, 76, 79, 33, 6, 98, 73, 34, 68, 30, 81, 25, 3, 39, 85, 80, 66, 94, 37, 67, 83, 48, 28, 22, 12, 64, 74, 46, 32, 86, 93, 72, 19, 59, 21, 49, 0, 27, 43, 10, 65, 75, 40, 7, 31, 96, 29), 69141, 37187)
    pareto insert ((s63.dist1, s63.dist2), s63)
    val s64 = new MOSol(Array(89, 12, 28, 5, 38, 14, 56, 27, 45, 20, 92, 97, 77, 32, 50, 62, 44, 15, 35, 29, 0, 23, 87, 17, 8, 64, 34, 90, 75, 99, 41, 58, 81, 26, 60, 16, 51, 71, 39, 66, 95, 88, 82, 91, 76, 70, 80, 13, 74, 53, 47, 42, 9, 57, 22, 25, 33, 6, 98, 73, 24, 85, 30, 1, 78, 3, 69, 68, 61, 52, 11, 46, 84, 83, 79, 94, 54, 40, 37, 55, 36, 63, 86, 93, 2, 19, 59, 21, 49, 48, 10, 18, 72, 65, 67, 43, 7, 31, 96, 4), Array(20, 63, 84, 65, 99, 3, 57, 96, 24, 52, 90, 70, 1, 47, 5, 17, 35, 23, 91, 85, 9, 87, 54, 21, 60, 55, 33, 7, 2, 19, 62, 97, 13, 56, 26, 18, 80, 78, 4, 38, 77, 30, 51, 95, 16, 8, 71, 50, 89, 88, 14, 36, 69, 49, 76, 79, 6, 53, 31, 86, 34, 68, 15, 81, 25, 93, 39, 94, 67, 66, 45, 37, 92, 59, 48, 28, 44, 12, 64, 74, 46, 32, 42, 73, 72, 61, 82, 22, 41, 0, 27, 43, 10, 83, 75, 40, 98, 11, 58, 29), 73052, 35308)
    pareto insert ((s64.dist1, s64.dist2), s64)
    val s65 = new MOSol(Array(89, 12, 28, 65, 38, 3, 56, 27, 45, 20, 92, 97, 77, 47, 5, 17, 44, 23, 35, 29, 0, 87, 46, 21, 8, 64, 34, 90, 75, 36, 62, 58, 81, 26, 60, 16, 51, 71, 39, 66, 95, 30, 13, 91, 76, 70, 80, 50, 74, 53, 14, 42, 9, 57, 49, 25, 33, 6, 98, 86, 24, 99, 15, 1, 78, 88, 69, 85, 61, 52, 11, 83, 84, 59, 79, 94, 54, 40, 37, 55, 68, 63, 32, 93, 2, 19, 82, 22, 41, 48, 10, 18, 72, 73, 67, 43, 7, 31, 96, 4), Array(20, 63, 84, 5, 99, 14, 57, 96, 24, 52, 90, 70, 1, 42, 50, 62, 35, 15, 91, 85, 9, 23, 87, 17, 60, 55, 33, 7, 2, 19, 41, 97, 82, 56, 26, 18, 29, 78, 4, 38, 77, 88, 51, 95, 16, 8, 22, 13, 89, 54, 47, 36, 69, 49, 76, 79, 6, 53, 31, 73, 34, 68, 30, 81, 25, 3, 39, 94, 80, 66, 45, 37, 92, 93, 48, 28, 44, 12, 64, 74, 46, 32, 86, 71, 72, 67, 59, 21, 65, 0, 27, 43, 10, 83, 75, 40, 98, 11, 58, 61), 74106, 35092)
    pareto insert ((s65.dist1, s65.dist2), s65)
    val s66 = new MOSol(Array(89, 63, 84, 5, 38, 14, 56, 96, 45, 48, 90, 94, 1, 82, 50, 18, 35, 15, 91, 29, 37, 22, 54, 17, 8, 64, 34, 7, 2, 99, 41, 97, 47, 26, 60, 23, 53, 71, 39, 66, 77, 88, 51, 95, 16, 70, 80, 13, 74, 42, 62, 36, 9, 57, 76, 25, 33, 6, 31, 73, 24, 68, 30, 81, 78, 3, 69, 85, 67, 52, 11, 46, 92, 83, 79, 28, 44, 12, 87, 55, 61, 32, 86, 93, 72, 19, 59, 21, 49, 20, 27, 43, 10, 65, 75, 40, 98, 0, 58, 4), Array(97, 12, 28, 65, 99, 3, 57, 27, 24, 52, 92, 70, 77, 47, 5, 17, 44, 23, 15, 85, 89, 87, 21, 35, 60, 55, 33, 90, 75, 19, 62, 58, 81, 56, 26, 16, 51, 20, 4, 38, 95, 30, 49, 91, 76, 8, 71, 32, 9, 88, 14, 42, 69, 36, 22, 79, 6, 53, 98, 86, 34, 80, 50, 1, 25, 93, 39, 68, 61, 66, 45, 37, 84, 59, 48, 94, 54, 40, 64, 74, 46, 63, 13, 73, 2, 67, 82, 78, 41, 0, 10, 18, 72, 83, 11, 43, 7, 31, 96, 29), 74740, 34780)
    pareto insert ((s66.dist1, s66.dist2), s66)
    val s67 = new MOSol(Array(89, 12, 84, 5, 61, 14, 56, 96, 45, 52, 90, 94, 77, 32, 50, 62, 44, 15, 35, 85, 9, 23, 87, 17, 8, 55, 34, 7, 2, 19, 41, 97, 81, 26, 60, 16, 53, 71, 4, 38, 95, 88, 51, 91, 76, 70, 78, 13, 37, 54, 47, 36, 69, 57, 22, 79, 33, 6, 31, 86, 24, 99, 30, 1, 25, 3, 39, 68, 80, 66, 11, 83, 92, 59, 48, 28, 49, 40, 64, 74, 46, 63, 42, 93, 72, 67, 82, 21, 73, 20, 27, 18, 10, 65, 75, 43, 98, 0, 58, 29), Array(97, 63, 28, 65, 38, 3, 57, 27, 24, 20, 92, 70, 1, 47, 5, 17, 35, 23, 91, 29, 89, 87, 54, 21, 60, 64, 33, 90, 75, 99, 62, 58, 13, 56, 26, 18, 51, 48, 39, 66, 77, 30, 82, 95, 16, 8, 80, 50, 74, 76, 14, 42, 9, 36, 49, 25, 6, 53, 98, 73, 34, 4, 15, 81, 78, 93, 69, 85, 67, 52, 45, 37, 84, 88, 79, 94, 44, 12, 46, 55, 68, 32, 86, 71, 2, 19, 59, 22, 41, 0, 10, 43, 72, 83, 11, 40, 7, 31, 96, 61), 78048, 33198)
    pareto insert ((s67.dist1, s67.dist2), s67)
    val s68 = new MOSol(Array(89, 63, 84, 65, 99, 3, 56, 96, 45, 52, 90, 94, 1, 47, 5, 17, 35, 23, 91, 85, 9, 22, 54, 76, 8, 55, 34, 7, 2, 19, 62, 97, 13, 26, 60, 18, 53, 71, 4, 38, 77, 30, 51, 95, 16, 70, 78, 50, 37, 88, 14, 36, 69, 57, 49, 79, 33, 6, 31, 86, 24, 80, 15, 81, 25, 93, 39, 68, 61, 66, 11, 87, 92, 59, 48, 28, 44, 12, 64, 74, 46, 32, 42, 73, 72, 67, 82, 21, 41, 20, 27, 43, 10, 83, 75, 40, 98, 0, 58, 29), Array(97, 12, 28, 5, 38, 14, 57, 27, 24, 20, 92, 70, 77, 32, 50, 62, 44, 15, 35, 29, 89, 87, 21, 17, 60, 64, 33, 90, 75, 99, 41, 58, 81, 56, 26, 16, 51, 48, 39, 66, 95, 88, 82, 91, 76, 8, 80, 13, 74, 54, 47, 42, 9, 36, 22, 25, 6, 53, 98, 73, 34, 68, 30, 1, 78, 3, 69, 85, 67, 52, 45, 37, 84, 83, 79, 94, 23, 40, 46, 55, 61, 63, 86, 93, 2, 19, 59, 71, 49, 0, 10, 18, 72, 65, 11, 43, 7, 31, 96, 4), 78275, 33282)
    pareto insert ((s68.dist1, s68.dist2), s68)
    val s69 = new MOSol(Array(89, 63, 28, 65, 99, 3, 56, 27, 45, 52, 92, 97, 1, 47, 5, 18, 35, 23, 91, 79, 9, 22, 54, 15, 8, 74, 34, 90, 75, 67, 62, 58, 14, 26, 60, 17, 29, 71, 4, 38, 77, 88, 51, 95, 16, 70, 78, 50, 37, 42, 30, 36, 69, 49, 76, 25, 33, 6, 98, 86, 24, 68, 41, 81, 87, 93, 39, 85, 80, 66, 11, 83, 84, 59, 48, 94, 44, 12, 64, 55, 46, 32, 13, 57, 2, 19, 82, 21, 53, 20, 10, 43, 72, 73, 0, 40, 7, 31, 96, 61), Array(94, 12, 84, 5, 38, 14, 57, 96, 24, 20, 90, 70, 77, 82, 32, 23, 44, 35, 15, 85, 89, 87, 21, 17, 60, 55, 33, 7, 2, 36, 50, 97, 81, 56, 26, 16, 51, 48, 39, 66, 95, 62, 49, 91, 76, 8, 80, 13, 74, 53, 47, 42, 9, 88, 22, 79, 6, 83, 31, 73, 34, 99, 30, 1, 78, 3, 69, 29, 61, 52, 45, 37, 92, 93, 25, 28, 54, 40, 46, 19, 68, 63, 86, 71, 72, 67, 59, 64, 41, 0, 27, 18, 10, 65, 75, 43, 98, 11, 58, 4), 81451, 32517)
    pareto insert ((s69.dist1, s69.dist2), s69)
    val s70 = new MOSol(Array(89, 63, 84, 65, 99, 3, 56, 96, 24, 52, 90, 26, 1, 47, 5, 17, 35, 23, 91, 85, 9, 87, 54, 21, 45, 55, 34, 7, 2, 19, 62, 97, 14, 8, 60, 18, 29, 71, 4, 38, 77, 15, 51, 95, 16, 70, 78, 50, 37, 42, 30, 53, 69, 36, 76, 74, 33, 6, 31, 86, 93, 68, 41, 81, 25, 88, 39, 94, 80, 66, 11, 83, 92, 59, 79, 28, 44, 12, 64, 48, 46, 32, 13, 57, 72, 67, 82, 22, 49, 20, 27, 43, 10, 73, 75, 40, 98, 0, 58, 61), Array(97, 12, 28, 5, 38, 14, 57, 27, 33, 20, 92, 70, 77, 82, 32, 41, 44, 15, 35, 29, 89, 23, 87, 17, 8, 64, 11, 90, 75, 36, 50, 58, 81, 56, 26, 16, 53, 48, 39, 66, 95, 62, 49, 91, 76, 24, 80, 13, 79, 88, 47, 42, 9, 51, 22, 25, 6, 83, 98, 73, 34, 99, 30, 1, 78, 3, 69, 85, 61, 52, 45, 37, 84, 93, 55, 94, 54, 40, 46, 74, 68, 63, 86, 71, 2, 19, 59, 21, 65, 0, 10, 18, 72, 60, 67, 43, 7, 31, 96, 4), 85374, 31188)
    pareto insert ((s70.dist1, s70.dist2), s70)
    val s71 = new MOSol(Array(94, 63, 84, 65, 38, 3, 56, 96, 45, 48, 20, 97, 1, 47, 5, 41, 44, 15, 91, 79, 89, 22, 54, 17, 8, 55, 34, 92, 2, 99, 62, 58, 82, 26, 60, 18, 29, 71, 39, 66, 77, 30, 51, 95, 35, 70, 78, 50, 37, 42, 14, 53, 9, 36, 76, 61, 33, 6, 98, 86, 24, 68, 16, 81, 87, 93, 69, 85, 80, 52, 11, 83, 67, 59, 25, 28, 23, 12, 64, 74, 46, 32, 13, 57, 72, 19, 88, 21, 49, 0, 27, 43, 10, 73, 75, 40, 90, 31, 7, 4), Array(89, 12, 28, 5, 99, 14, 57, 98, 24, 52, 92, 70, 77, 82, 50, 17, 62, 23, 35, 85, 10, 87, 21, 76, 60, 74, 33, 90, 75, 36, 41, 97, 81, 56, 26, 44, 53, 48, 4, 38, 95, 15, 49, 91, 16, 8, 80, 13, 9, 88, 47, 42, 69, 51, 22, 25, 6, 83, 31, 73, 34, 55, 30, 1, 78, 3, 39, 72, 61, 66, 45, 37, 84, 93, 79, 94, 54, 40, 46, 19, 68, 63, 32, 71, 2, 67, 59, 64, 86, 20, 96, 18, 27, 65, 0, 43, 7, 11, 58, 29), 86942, 31157)
    pareto insert ((s71.dist1, s71.dist2), s71)
    val s72 = new MOSol(Array(89, 12, 28, 5, 61, 14, 56, 27, 45, 52, 92, 97, 77, 82, 32, 41, 44, 15, 35, 85, 9, 23, 87, 17, 8, 55, 34, 90, 75, 19, 50, 58, 81, 26, 60, 16, 53, 71, 4, 38, 95, 62, 49, 91, 76, 70, 78, 13, 37, 88, 47, 42, 69, 51, 22, 74, 33, 6, 98, 73, 24, 99, 30, 1, 25, 3, 39, 68, 80, 66, 11, 36, 84, 93, 79, 94, 54, 40, 64, 48, 46, 63, 86, 57, 2, 67, 59, 21, 65, 20, 10, 18, 72, 83, 0, 43, 7, 31, 96, 29), Array(94, 63, 84, 65, 38, 3, 57, 96, 24, 20, 90, 70, 1, 47, 5, 17, 35, 23, 91, 29, 89, 87, 54, 21, 60, 64, 33, 7, 2, 99, 62, 97, 14, 56, 26, 18, 71, 48, 39, 66, 77, 15, 51, 95, 16, 8, 80, 50, 79, 42, 30, 53, 9, 36, 76, 25, 6, 83, 31, 86, 34, 4, 41, 81, 78, 88, 69, 85, 67, 52, 45, 37, 92, 59, 55, 28, 44, 12, 46, 74, 68, 32, 13, 93, 72, 19, 82, 22, 49, 0, 27, 43, 10, 73, 75, 40, 98, 11, 58, 61), 88301, 30177)
    pareto insert ((s72.dist1, s72.dist2), s72)
    val s73 = new MOSol(Array(89, 41, 28, 65, 61, 3, 56, 27, 45, 52, 92, 97, 1, 82, 5, 76, 35, 15, 91, 85, 9, 23, 87, 17, 8, 55, 34, 90, 75, 19, 50, 58, 63, 26, 60, 18, 53, 71, 4, 38, 77, 62, 49, 95, 16, 70, 78, 81, 37, 54, 47, 42, 69, 51, 22, 74, 33, 6, 98, 73, 24, 99, 30, 13, 25, 88, 39, 68, 80, 66, 11, 36, 84, 93, 79, 94, 44, 12, 64, 48, 46, 32, 14, 57, 2, 67, 59, 21, 86, 20, 10, 43, 72, 83, 0, 40, 7, 31, 96, 29), Array(94, 12, 84, 5, 38, 14, 57, 96, 24, 20, 90, 70, 77, 63, 82, 17, 44, 23, 35, 29, 89, 87, 54, 21, 60, 64, 33, 7, 2, 99, 62, 97, 81, 56, 26, 16, 71, 48, 39, 66, 95, 1, 51, 91, 76, 8, 80, 50, 79, 42, 30, 53, 9, 36, 49, 25, 6, 83, 31, 86, 34, 4, 41, 32, 78, 3, 69, 85, 67, 52, 45, 37, 92, 59, 55, 28, 15, 40, 46, 74, 68, 47, 13, 93, 72, 19, 88, 22, 65, 0, 27, 18, 10, 73, 75, 43, 98, 11, 58, 61), 91921, 29389)
    pareto insert ((s73.dist1, s73.dist2), s73)
    val s74 = new MOSol(Array(89, 41, 28, 65, 61, 3, 56, 96, 45, 52, 92, 97, 1, 82, 5, 76, 35, 15, 91, 85, 9, 23, 87, 17, 8, 55, 34, 90, 75, 19, 50, 58, 63, 26, 60, 18, 53, 71, 4, 38, 77, 62, 49, 95, 16, 70, 78, 81, 37, 54, 47, 42, 69, 51, 22, 74, 33, 6, 98, 73, 24, 99, 30, 13, 25, 88, 39, 68, 80, 66, 11, 36, 84, 93, 79, 94, 44, 12, 64, 48, 46, 32, 14, 57, 2, 67, 59, 21, 86, 20, 10, 43, 72, 83, 0, 40, 27, 31, 7, 29), Array(94, 12, 84, 5, 38, 14, 57, 98, 24, 20, 90, 70, 77, 63, 82, 17, 44, 23, 35, 29, 89, 87, 54, 21, 60, 64, 33, 96, 2, 99, 62, 97, 81, 56, 26, 16, 71, 48, 39, 66, 95, 1, 51, 91, 76, 8, 80, 50, 79, 42, 30, 53, 9, 36, 49, 25, 6, 83, 31, 86, 34, 4, 41, 32, 78, 3, 69, 85, 67, 52, 45, 37, 92, 59, 55, 28, 15, 40, 46, 74, 68, 47, 13, 93, 72, 19, 88, 22, 65, 0, 27, 18, 10, 73, 75, 43, 7, 11, 58, 61), 92571, 29245)
    pareto insert ((s74.dist1, s74.dist2), s74)
    val s75 = new MOSol(Array(89, 41, 28, 65, 38, 3, 56, 96, 45, 52, 92, 97, 1, 82, 5, 76, 35, 15, 91, 85, 9, 23, 87, 17, 8, 55, 34, 90, 75, 19, 50, 58, 63, 26, 60, 18, 53, 79, 39, 67, 77, 62, 49, 95, 16, 70, 78, 81, 37, 54, 47, 42, 69, 51, 22, 80, 33, 6, 98, 73, 24, 99, 30, 13, 71, 88, 4, 68, 61, 66, 11, 36, 84, 93, 25, 94, 44, 12, 64, 74, 46, 32, 14, 57, 2, 48, 59, 21, 86, 20, 10, 43, 72, 83, 0, 40, 27, 31, 7, 29), Array(94, 12, 84, 5, 66, 14, 57, 98, 24, 20, 90, 70, 77, 63, 82, 17, 44, 23, 35, 29, 89, 87, 54, 21, 60, 74, 33, 96, 2, 99, 62, 97, 81, 56, 26, 16, 71, 48, 4, 38, 95, 1, 51, 91, 76, 8, 80, 50, 85, 42, 30, 53, 9, 36, 49, 25, 6, 83, 31, 86, 34, 68, 41, 32, 78, 3, 69, 39, 67, 52, 45, 64, 92, 59, 79, 28, 15, 40, 46, 37, 55, 47, 13, 93, 72, 19, 88, 22, 65, 0, 27, 18, 10, 73, 75, 43, 7, 11, 58, 61), 97834, 28120)
    pareto insert ((s75.dist1, s75.dist2), s75)
    val s76 = new MOSol(Array(94, 81, 84, 5, 66, 14, 57, 98, 24, 20, 90, 70, 1, 82, 50, 17, 35, 23, 91, 29, 89, 87, 21, 76, 60, 74, 33, 96, 2, 99, 62, 97, 63, 56, 26, 18, 71, 48, 4, 38, 77, 15, 49, 95, 16, 8, 80, 30, 85, 54, 47, 36, 9, 51, 22, 25, 6, 83, 31, 73, 34, 68, 41, 13, 78, 3, 69, 39, 67, 52, 45, 64, 92, 88, 79, 28, 44, 12, 46, 37, 55, 32, 86, 93, 72, 19, 59, 53, 42, 0, 27, 43, 10, 65, 75, 40, 7, 11, 58, 61), Array(89, 12, 28, 65, 38, 3, 56, 96, 45, 52, 92, 97, 77, 63, 5, 41, 44, 15, 35, 85, 9, 22, 54, 17, 8, 55, 34, 90, 75, 19, 47, 58, 81, 26, 60, 16, 51, 79, 39, 67, 95, 62, 88, 91, 76, 70, 78, 50, 37, 42, 14, 53, 69, 87, 49, 80, 33, 6, 98, 86, 24, 99, 30, 32, 71, 93, 4, 68, 61, 66, 11, 36, 84, 59, 25, 94, 23, 40, 64, 74, 46, 1, 13, 57, 2, 48, 82, 21, 73, 20, 10, 18, 72, 83, 0, 43, 27, 31, 7, 29), 98987, 27994)
    pareto insert ((s76.dist1, s76.dist2), s76)
    val s77 = new MOSol(Array(89, 41, 28, 65, 38, 3, 56, 96, 45, 52, 92, 97, 1, 82, 5, 23, 35, 44, 91, 85, 9, 22, 54, 17, 8, 55, 34, 90, 75, 19, 50, 58, 63, 26, 60, 18, 71, 79, 39, 67, 77, 62, 51, 95, 16, 70, 78, 81, 37, 76, 47, 53, 69, 36, 49, 80, 33, 6, 98, 86, 24, 99, 30, 13, 87, 93, 4, 68, 61, 66, 11, 83, 84, 59, 25, 94, 15, 12, 64, 74, 46, 32, 14, 57, 2, 48, 88, 21, 42, 20, 10, 43, 72, 73, 0, 40, 27, 31, 7, 29), Array(94, 12, 84, 5, 66, 14, 57, 98, 24, 20, 90, 70, 77, 63, 82, 76, 44, 23, 35, 29, 89, 87, 21, 15, 60, 74, 33, 96, 2, 99, 62, 97, 81, 56, 26, 16, 53, 48, 4, 38, 95, 1, 88, 91, 17, 8, 80, 50, 85, 54, 30, 42, 9, 51, 22, 25, 6, 83, 31, 73, 34, 68, 41, 32, 78, 3, 69, 39, 67, 52, 45, 36, 92, 93, 79, 28, 49, 40, 46, 37, 55, 47, 13, 71, 72, 19, 59, 64, 86, 0, 27, 18, 10, 65, 75, 43, 7, 11, 58, 61), 99397, 27852)
    pareto insert ((s77.dist1, s77.dist2), s77)
    val s78 = new MOSol(Array(94, 41, 84, 65, 66, 3, 57, 98, 24, 20, 90, 70, 1, 82, 5, 23, 35, 44, 91, 29, 89, 22, 54, 17, 60, 74, 33, 96, 2, 99, 50, 97, 63, 56, 26, 18, 71, 48, 4, 38, 77, 62, 51, 95, 16, 8, 80, 81, 85, 76, 47, 53, 9, 36, 49, 25, 6, 83, 31, 86, 34, 68, 30, 13, 78, 93, 69, 39, 67, 52, 45, 64, 92, 59, 79, 28, 15, 12, 46, 37, 55, 32, 14, 87, 72, 19, 88, 21, 42, 0, 27, 43, 10, 73, 75, 40, 7, 11, 58, 61), Array(89, 12, 28, 5, 38, 14, 56, 96, 45, 52, 92, 97, 77, 63, 82, 76, 44, 23, 35, 85, 9, 87, 21, 15, 8, 55, 34, 90, 75, 19, 62, 58, 81, 26, 60, 16, 53, 79, 39, 67, 95, 1, 88, 91, 17, 70, 78, 50, 37, 54, 30, 42, 69, 51, 22, 80, 33, 6, 98, 73, 24, 99, 41, 32, 71, 3, 4, 68, 61, 66, 11, 36, 84, 93, 25, 94, 49, 40, 64, 74, 46, 47, 13, 57, 2, 48, 59, 83, 86, 20, 10, 18, 72, 65, 0, 43, 27, 31, 7, 29), 100481, 27782)
    pareto insert ((s78.dist1, s78.dist2), s78)
    val s79 = new MOSol(Array(94, 81, 10, 5, 66, 14, 57, 98, 26, 20, 92, 70, 1, 82, 50, 17, 35, 23, 91, 29, 89, 87, 21, 76, 8, 74, 34, 90, 2, 68, 62, 97, 63, 6, 60, 18, 71, 48, 69, 38, 77, 15, 49, 95, 16, 24, 80, 30, 85, 54, 47, 36, 72, 51, 22, 25, 33, 83, 31, 73, 56, 4, 41, 13, 78, 3, 39, 9, 99, 52, 45, 64, 84, 88, 79, 28, 44, 12, 46, 37, 55, 32, 86, 93, 67, 19, 59, 53, 42, 0, 96, 43, 27, 65, 75, 40, 7, 11, 58, 61), Array(89, 12, 28, 65, 61, 3, 33, 96, 24, 67, 2, 97, 77, 63, 5, 41, 44, 15, 35, 85, 9, 22, 54, 17, 45, 55, 8, 92, 75, 19, 47, 58, 81, 56, 26, 16, 51, 79, 39, 66, 95, 62, 88, 91, 76, 70, 78, 50, 37, 42, 14, 53, 69, 87, 49, 80, 60, 6, 98, 86, 34, 99, 30, 32, 71, 93, 4, 84, 29, 38, 11, 36, 52, 59, 25, 94, 23, 40, 64, 74, 46, 1, 13, 57, 72, 48, 82, 21, 73, 20, 27, 18, 10, 83, 0, 43, 90, 31, 7, 68), 107967, 26642)
    pareto insert ((s79.dist1, s79.dist2), s79)
    val s80 = new MOSol(Array(89, 41, 28, 65, 61, 3, 33, 96, 24, 67, 2, 97, 1, 82, 5, 23, 35, 44, 91, 85, 9, 22, 54, 17, 45, 55, 8, 92, 75, 19, 50, 58, 63, 56, 26, 18, 71, 79, 39, 66, 77, 62, 51, 95, 16, 70, 78, 81, 37, 76, 47, 53, 69, 36, 49, 80, 93, 6, 98, 86, 34, 99, 30, 13, 87, 73, 4, 84, 29, 38, 11, 83, 52, 59, 25, 94, 15, 12, 64, 74, 46, 32, 14, 57, 72, 48, 88, 21, 42, 20, 27, 43, 10, 60, 0, 40, 90, 31, 7, 68), Array(94, 12, 10, 5, 66, 14, 57, 98, 26, 20, 92, 70, 77, 63, 82, 76, 44, 23, 35, 29, 89, 87, 21, 15, 8, 74, 34, 90, 2, 68, 62, 97, 81, 6, 60, 16, 53, 48, 69, 38, 95, 1, 88, 91, 17, 24, 80, 50, 85, 54, 30, 42, 72, 51, 22, 25, 33, 83, 31, 73, 93, 4, 41, 32, 78, 3, 39, 9, 99, 52, 45, 36, 84, 65, 79, 28, 49, 40, 46, 37, 55, 47, 13, 71, 67, 19, 59, 64, 86, 0, 96, 18, 27, 56, 75, 43, 7, 11, 58, 61), 112617, 25862)
    pareto insert ((s80.dist1, s80.dist2), s80)
    val s81 = new MOSol(Array(89, 12, 28, 65, 66, 3, 56, 98, 24, 67, 2, 70, 77, 63, 5, 41, 44, 23, 35, 29, 9, 87, 21, 76, 45, 68, 34, 90, 75, 74, 47, 97, 81, 8, 60, 16, 71, 79, 69, 38, 95, 62, 49, 91, 17, 94, 80, 50, 37, 54, 14, 36, 72, 51, 22, 25, 33, 6, 31, 86, 93, 4, 30, 32, 78, 88, 39, 85, 99, 52, 26, 83, 84, 59, 64, 27, 15, 40, 46, 19, 55, 1, 13, 57, 92, 48, 82, 53, 42, 20, 96, 18, 10, 73, 0, 43, 7, 11, 58, 61), Array(94, 81, 10, 5, 61, 14, 57, 96, 33, 20, 92, 97, 1, 82, 50, 76, 35, 44, 91, 79, 89, 22, 54, 17, 8, 55, 70, 75, 2, 19, 62, 58, 63, 56, 26, 18, 51, 48, 39, 66, 77, 15, 88, 95, 16, 24, 78, 30, 85, 42, 47, 53, 69, 87, 49, 80, 6, 83, 98, 73, 34, 99, 41, 13, 74, 3, 4, 9, 25, 38, 11, 36, 52, 93, 29, 28, 23, 12, 64, 37, 46, 32, 86, 71, 72, 67, 59, 21, 65, 0, 27, 43, 84, 60, 45, 40, 90, 31, 7, 68), 122223, 25234)
    pareto insert ((s81.dist1, s81.dist2), s81)
    val s82 = new MOSol(Array(94, 12, 10, 5, 61, 14, 57, 96, 33, 20, 92, 97, 77, 82, 32, 41, 44, 23, 35, 79, 89, 22, 54, 76, 8, 55, 70, 75, 2, 19, 62, 58, 81, 56, 26, 16, 51, 48, 39, 66, 95, 63, 88, 91, 17, 24, 78, 50, 85, 42, 30, 53, 69, 87, 49, 80, 6, 83, 98, 73, 34, 99, 1, 13, 74, 3, 4, 9, 25, 38, 11, 36, 52, 93, 29, 28, 15, 40, 64, 37, 46, 47, 86, 71, 72, 67, 59, 21, 65, 0, 27, 18, 84, 60, 45, 43, 90, 31, 7, 68), Array(89, 62, 28, 65, 66, 3, 56, 98, 24, 67, 2, 70, 1, 63, 5, 76, 35, 44, 91, 29, 9, 87, 21, 17, 45, 68, 34, 90, 75, 74, 50, 97, 14, 8, 60, 18, 71, 79, 69, 38, 77, 15, 49, 95, 16, 94, 80, 81, 37, 54, 47, 36, 72, 51, 22, 25, 33, 6, 31, 86, 93, 4, 30, 41, 78, 88, 39, 85, 99, 52, 26, 83, 84, 59, 64, 27, 23, 12, 46, 19, 55, 32, 13, 57, 92, 48, 82, 53, 42, 20, 96, 43, 10, 73, 0, 40, 7, 11, 58, 61), 124526, 24958)
    pareto insert ((s82.dist1, s82.dist2), s82)
    val s83 = new MOSol(Array(94, 41, 10, 65, 61, 3, 57, 96, 33, 20, 92, 97, 1, 82, 32, 23, 35, 44, 91, 37, 89, 22, 54, 17, 8, 68, 70, 75, 2, 74, 47, 58, 81, 56, 26, 18, 71, 48, 39, 66, 77, 62, 51, 95, 16, 24, 87, 50, 85, 76, 14, 53, 69, 36, 49, 25, 6, 83, 98, 86, 34, 99, 30, 13, 78, 93, 4, 9, 29, 38, 11, 64, 52, 59, 79, 28, 15, 12, 80, 19, 46, 63, 5, 73, 72, 67, 88, 21, 42, 0, 27, 43, 84, 60, 45, 40, 90, 31, 7, 55), Array(89, 12, 28, 5, 66, 82, 56, 98, 24, 67, 2, 70, 77, 63, 50, 76, 44, 23, 35, 79, 9, 87, 21, 15, 45, 55, 34, 90, 75, 68, 62, 97, 14, 8, 60, 16, 53, 19, 69, 38, 95, 1, 88, 91, 17, 94, 80, 30, 37, 54, 47, 42, 72, 51, 22, 99, 33, 6, 31, 73, 93, 4, 41, 81, 71, 3, 39, 85, 25, 52, 26, 36, 84, 83, 29, 27, 49, 40, 64, 74, 78, 32, 13, 57, 92, 48, 59, 46, 86, 20, 96, 18, 10, 65, 0, 43, 7, 11, 58, 61), 127776, 24423)
    pareto insert ((s83.dist1, s83.dist2), s83)
    val s84 = new MOSol(Array(94, 12, 84, 5, 61, 14, 57, 98, 33, 20, 2, 97, 77, 82, 32, 41, 44, 23, 35, 37, 89, 87, 21, 76, 8, 68, 70, 92, 7, 74, 62, 58, 81, 56, 26, 16, 53, 48, 39, 66, 95, 63, 49, 91, 17, 24, 80, 30, 85, 54, 47, 6, 69, 51, 22, 25, 59, 83, 75, 73, 34, 99, 1, 13, 71, 3, 4, 9, 29, 38, 11, 36, 52, 65, 79, 28, 15, 40, 64, 19, 78, 50, 86, 93, 72, 67, 88, 46, 42, 0, 27, 18, 10, 60, 45, 43, 90, 31, 96, 55), Array(89, 62, 10, 65, 66, 3, 51, 28, 24, 67, 92, 70, 1, 63, 5, 76, 35, 44, 91, 79, 9, 22, 54, 17, 45, 55, 34, 90, 75, 68, 47, 97, 14, 8, 60, 18, 71, 19, 69, 38, 77, 15, 88, 95, 16, 94, 87, 50, 37, 42, 81, 53, 72, 36, 49, 99, 33, 6, 31, 56, 93, 4, 30, 41, 78, 73, 39, 85, 25, 52, 26, 64, 84, 59, 29, 58, 23, 12, 80, 74, 46, 32, 13, 57, 2, 48, 82, 21, 86, 20, 96, 43, 27, 83, 0, 40, 98, 11, 7, 61), 134290, 23989)
    pareto insert ((s84.dist1, s84.dist2), s84)
    val s85 = new MOSol(Array(89, 15, 27, 65, 66, 3, 83, 28, 45, 67, 2, 94, 1, 82, 5, 41, 40, 35, 91, 79, 9, 22, 54, 17, 8, 68, 34, 90, 75, 19, 47, 97, 14, 6, 60, 44, 71, 24, 69, 38, 43, 62, 51, 18, 16, 70, 80, 50, 74, 76, 81, 36, 72, 87, 49, 25, 33, 53, 31, 86, 93, 4, 30, 13, 78, 73, 39, 85, 61, 52, 26, 64, 84, 59, 29, 58, 23, 12, 46, 37, 99, 63, 32, 57, 92, 48, 88, 21, 42, 20, 96, 95, 10, 56, 0, 77, 98, 11, 7, 55), Array(94, 12, 10, 5, 61, 14, 33, 98, 24, 20, 92, 97, 77, 63, 32, 1, 44, 23, 43, 29, 89, 87, 21, 76, 37, 55, 70, 2, 7, 74, 62, 58, 82, 56, 26, 17, 51, 79, 39, 66, 16, 15, 88, 40, 35, 8, 78, 30, 85, 54, 47, 42, 69, 57, 22, 99, 93, 83, 75, 73, 34, 68, 41, 81, 71, 3, 4, 9, 25, 38, 45, 36, 52, 65, 48, 28, 49, 95, 64, 19, 46, 50, 13, 6, 72, 67, 59, 53, 86, 0, 27, 18, 84, 60, 11, 91, 90, 31, 96, 80), 141917, 23455)
    pareto insert ((s85.dist1, s85.dist2), s85)
    val s86 = new MOSol(Array(94, 41, 10, 5, 61, 14, 83, 98, 33, 20, 92, 97, 77, 82, 32, 1, 44, 23, 43, 37, 89, 87, 21, 76, 8, 68, 70, 2, 7, 74, 62, 58, 81, 56, 26, 17, 53, 48, 39, 66, 16, 63, 49, 40, 35, 24, 80, 30, 85, 54, 47, 57, 69, 51, 22, 25, 59, 6, 75, 73, 34, 99, 12, 13, 71, 3, 4, 9, 29, 38, 11, 36, 52, 65, 79, 28, 15, 95, 64, 19, 78, 50, 86, 93, 72, 67, 88, 46, 42, 0, 27, 18, 84, 60, 45, 91, 90, 31, 96, 55), Array(89, 15, 27, 65, 66, 3, 57, 28, 24, 67, 2, 70, 62, 63, 5, 76, 40, 35, 91, 79, 9, 22, 54, 17, 45, 55, 34, 90, 75, 68, 47, 97, 14, 8, 60, 44, 71, 19, 69, 38, 43, 1, 88, 18, 16, 94, 87, 50, 37, 42, 81, 53, 72, 36, 49, 99, 33, 51, 31, 56, 93, 4, 30, 41, 78, 73, 39, 85, 25, 52, 26, 64, 84, 59, 29, 58, 23, 12, 80, 74, 46, 32, 13, 6, 92, 48, 82, 21, 86, 20, 96, 95, 10, 83, 0, 77, 98, 11, 7, 61), 143817, 23243)
    pareto insert ((s86.dist1, s86.dist2), s86)
    val s87 = new MOSol(Array(94, 41, 10, 65, 61, 3, 33, 98, 24, 20, 92, 97, 1, 82, 32, 23, 40, 35, 91, 37, 89, 22, 54, 17, 71, 68, 70, 2, 7, 74, 47, 58, 81, 56, 26, 44, 64, 48, 39, 66, 43, 62, 51, 18, 16, 8, 87, 50, 85, 76, 14, 53, 69, 57, 49, 25, 93, 83, 75, 86, 34, 99, 30, 13, 78, 73, 4, 9, 29, 38, 11, 36, 52, 59, 79, 28, 15, 12, 80, 19, 46, 63, 5, 6, 72, 67, 88, 21, 42, 0, 27, 95, 84, 60, 45, 77, 90, 31, 96, 55), Array(89, 12, 27, 5, 66, 82, 83, 28, 45, 67, 2, 70, 77, 63, 50, 76, 44, 23, 43, 79, 9, 87, 21, 15, 8, 55, 34, 90, 75, 68, 62, 97, 14, 6, 60, 17, 71, 19, 69, 38, 16, 1, 88, 40, 35, 94, 80, 30, 37, 54, 47, 42, 72, 51, 22, 99, 33, 53, 31, 73, 93, 4, 41, 81, 36, 3, 39, 85, 25, 52, 26, 24, 84, 65, 29, 58, 49, 95, 64, 74, 78, 32, 13, 57, 92, 48, 59, 46, 86, 20, 96, 18, 10, 56, 0, 91, 98, 11, 7, 61), 143894, 23119)
    pareto insert ((s87.dist1, s87.dist2), s87)
    val s88 = new MOSol(Array(94, 15, 10, 65, 61, 3, 33, 98, 24, 20, 92, 97, 1, 82, 5, 41, 77, 44, 43, 37, 89, 22, 54, 17, 71, 68, 70, 2, 7, 74, 47, 58, 14, 56, 26, 95, 64, 48, 39, 66, 16, 62, 51, 40, 35, 8, 87, 50, 85, 76, 81, 53, 69, 57, 49, 25, 93, 83, 75, 86, 34, 99, 30, 13, 78, 73, 4, 9, 29, 38, 11, 36, 52, 59, 79, 28, 23, 12, 80, 19, 46, 63, 32, 6, 72, 67, 88, 21, 42, 0, 27, 18, 84, 60, 45, 91, 90, 31, 96, 55), Array(89, 12, 27, 5, 66, 14, 83, 28, 45, 67, 2, 70, 77, 63, 32, 1, 40, 23, 91, 79, 9, 87, 21, 76, 8, 55, 34, 90, 75, 68, 62, 97, 82, 6, 60, 44, 71, 19, 69, 38, 43, 15, 88, 18, 17, 94, 80, 30, 37, 54, 47, 42, 72, 51, 22, 99, 33, 53, 31, 73, 93, 4, 41, 81, 36, 3, 39, 85, 25, 52, 26, 24, 84, 65, 29, 58, 49, 16, 64, 74, 78, 50, 13, 57, 92, 48, 59, 46, 86, 20, 96, 95, 10, 56, 0, 35, 98, 11, 7, 61), 152476, 22725)
    pareto insert ((s88.dist1, s88.dist2), s88)
    val s89 = new MOSol(Array(89, 41, 27, 5, 66, 14, 33, 28, 24, 67, 2, 70, 77, 82, 32, 1, 40, 23, 91, 37, 9, 87, 21, 76, 45, 68, 34, 90, 75, 74, 62, 97, 81, 8, 60, 44, 64, 71, 69, 38, 43, 63, 49, 18, 17, 94, 80, 30, 29, 54, 47, 57, 72, 51, 22, 99, 59, 83, 31, 73, 93, 4, 12, 13, 78, 3, 39, 85, 61, 52, 26, 36, 84, 65, 79, 58, 15, 16, 46, 19, 55, 50, 86, 6, 92, 48, 88, 53, 42, 20, 96, 95, 10, 56, 0, 35, 98, 11, 7, 25), Array(94, 15, 10, 65, 61, 3, 83, 98, 33, 20, 92, 97, 62, 63, 5, 76, 77, 44, 43, 79, 89, 22, 54, 17, 8, 99, 70, 2, 7, 48, 47, 58, 14, 6, 26, 95, 71, 19, 39, 66, 16, 1, 88, 40, 35, 24, 78, 50, 85, 42, 81, 53, 69, 87, 49, 80, 93, 51, 75, 56, 34, 68, 30, 41, 36, 73, 4, 9, 25, 38, 11, 37, 52, 59, 29, 28, 23, 12, 64, 74, 46, 32, 13, 57, 72, 67, 82, 21, 86, 0, 27, 18, 84, 60, 45, 91, 90, 31, 96, 55), 159692, 22467)
    pareto insert ((s89.dist1, s89.dist2), s89)
    val s90 = new MOSol(Array(45, 12, 27, 65, 66, 82, 56, 28, 33, 67, 2, 89, 62, 63, 5, 76, 77, 44, 43, 79, 9, 22, 54, 17, 8, 55, 70, 90, 75, 74, 47, 97, 14, 71, 60, 95, 64, 19, 69, 38, 16, 13, 51, 40, 35, 24, 87, 50, 37, 15, 81, 53, 72, 57, 49, 99, 93, 83, 31, 86, 26, 4, 30, 32, 78, 73, 39, 85, 25, 52, 11, 36, 84, 59, 68, 58, 23, 1, 80, 29, 46, 41, 3, 6, 92, 48, 88, 21, 42, 20, 96, 18, 10, 34, 0, 91, 98, 94, 7, 61), Array(94, 77, 10, 82, 61, 14, 83, 98, 24, 20, 92, 70, 1, 41, 32, 49, 40, 23, 91, 37, 89, 87, 21, 76, 45, 68, 60, 2, 7, 79, 62, 58, 63, 8, 93, 44, 71, 48, 39, 66, 43, 81, 88, 18, 17, 0, 80, 30, 85, 54, 47, 42, 69, 51, 22, 25, 6, 53, 75, 73, 34, 99, 12, 13, 36, 3, 4, 9, 74, 38, 26, 33, 52, 65, 29, 28, 15, 16, 64, 19, 78, 50, 5, 57, 72, 67, 59, 46, 86, 11, 27, 95, 84, 56, 97, 35, 90, 31, 96, 55), 168924, 22464)
    pareto insert ((s90.dist1, s90.dist2), s90)
    val s91 = new MOSol(Array(94, 15, 10, 82, 61, 3, 83, 98, 33, 20, 92, 0, 62, 41, 5, 49, 77, 44, 43, 79, 89, 54, 21, 17, 8, 99, 70, 2, 7, 48, 47, 58, 14, 6, 60, 95, 71, 19, 39, 66, 16, 1, 88, 40, 35, 24, 64, 50, 85, 42, 81, 53, 69, 87, 76, 80, 93, 51, 75, 56, 26, 68, 30, 13, 36, 73, 4, 9, 25, 38, 11, 37, 52, 59, 29, 28, 23, 12, 46, 74, 78, 32, 63, 57, 72, 67, 65, 22, 86, 45, 27, 18, 84, 34, 97, 91, 90, 31, 96, 55), Array(11, 41, 27, 5, 66, 14, 33, 28, 24, 67, 2, 70, 77, 63, 32, 1, 40, 23, 91, 37, 9, 22, 87, 76, 45, 68, 60, 90, 75, 74, 62, 97, 81, 8, 93, 44, 64, 71, 69, 38, 43, 13, 49, 18, 17, 89, 78, 30, 29, 15, 47, 57, 72, 51, 21, 99, 59, 83, 31, 73, 34, 4, 12, 82, 46, 86, 39, 85, 61, 52, 26, 36, 84, 65, 79, 58, 54, 16, 80, 19, 55, 50, 3, 6, 92, 48, 88, 53, 42, 20, 96, 95, 10, 56, 0, 35, 98, 94, 7, 25), 176436, 22141)
    pareto insert ((s91.dist1, s91.dist2), s91)
  }
}